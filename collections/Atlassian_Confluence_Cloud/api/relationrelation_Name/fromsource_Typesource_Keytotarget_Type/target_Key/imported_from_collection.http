#!/usr/bin/env dothttp

# imported from 35240-a1adb5da-a0fe-4a6e-9435-7531e1b20955.postman_collection.json

// Find whether a particular type of relationship exists from a source
// entity to a target entity. Note, relationships are one way.
// 
// For example, you can use this method to find whether the current user has
// selected a particular page as a favorite (i.e. 'save for later'):
// `GET https://your-domain.atlassian.net/wiki/rest/api/relation/favourite/from/user/current/to/content/123`
// 
// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
// Permission to view both the target entity and source entity.

@name("Find relationship from source to target")
GET "https://{{baseUrl}}/api/relation/:relationName/from/:sourceType/:sourceKey/to/:targetType/:targetKey"
? "sourceStatus"= "<string>"
? "targetStatus"= "<string>"
? "sourceVersion"= "<integer>"
? "targetVersion"= "<integer>"
? "expand"= "<string>"
? "expand"= "<string>"


// Creates a relationship between two entities (user, space, content). The
// 'favourite' relationship is supported by default, but you can use this method
// to create any type of relationship between two entities.
// 
// For example, the following method creates a 'sibling' relationship between
// two pieces of content:
// `GET https://your-domain.atlassian.net/wiki/rest/api/relation/sibling/from/content/123/to/content/456`
// 
// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
// Permission to access the Confluence site ('Can use' global permission).

@name("Create relationship")
PUT "https://{{baseUrl}}/api/relation/:relationName/from/:sourceType/:sourceKey/to/:targetType/:targetKey"
? "sourceStatus"= "<string>"
? "targetStatus"= "<string>"
? "sourceVersion"= "<integer>"
? "targetVersion"= "<integer>"


// Deletes a relationship between two entities (user, space, content).
// 
// **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
// Permission to access the Confluence site ('Can use' global permission).
// For favourite relationships, the current user can only delete their own
// favourite relationships. A space administrator can delete favourite
// relationships for any user.

@name("Delete relationship")
DELETE "https://{{baseUrl}}/api/relation/:relationName/from/:sourceType/:sourceKey/to/:targetType/:targetKey"
? "sourceStatus"= "<string>"
? "targetStatus"= "<string>"
? "sourceVersion"= "<integer>"
? "targetVersion"= "<integer>"



