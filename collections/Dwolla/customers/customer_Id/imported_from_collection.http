#!/usr/bin/env dothttp

# imported from 35240-2e4fc519-a42b-4b90-bb17-fc7dde3aa9e4.postman_collection.json

// Retrieve a Customer belonging to the authorized Dwolla Master Account.nn### Request parametersnnParameter | Data Type | Parameter Type | Required | Descriptionn---------|----------|----------|---------|---------|nid | string | path | yes | Customer unique identifier.

@name("Retrieve A Customer")
GET "https://{{baseUrl}}/customers/:customerId"


// Retrieve a list of documents that belong to a Customer.nn### Request parametersnnParameter | Data Type | Parameter Type | Required | Descriptionn---------|---------|----------|--------|---------|nid | string | path | yes | Customer unique identifier.

@name("List Documents For A Customer")
GET "https://{{baseUrl}}/customers/:customerId/documents"


// Create a new Funding Source for a Customer. Customers can have a maximum of 6 funding sources.nn### Request parametersnParameter | Data Type | Parameter Type | Required | Descriptionn---------|---------|----------|--------|---------|n_links | object | body | no | A <code>_links</code> JSON object containing an `on-demand-authorization` link relation. See example raw request and response below.nroutingNumber | string | body | yes | The bank account's routing number.naccountNumber | string | body 

@name("Create A Funding Source For A Customer - On-demand Auth")
POST "https://{{baseUrl}}/customers/:customerId/funding-sources"


// To initiate the IAV flow, dwolla.js requires a single-use IAV token for a Customer. Your server initiates a POST request to Dwolla, specifying for which Customer you want to add/verify a bank account. Dwolla will respond with a non-expiring single-use token. This IAV token will be sent to the client and used to authenticate the HTTP request asking Dwolla to render the IAV flow.nn### Resourcesnn[Article - Funding source verification - IAV](https://developers.dwolla.com/resources/funding-source-ve

@name("Create An IAV Token For Dwolla.js")
POST "https://{{baseUrl}}/customers/:customerId/iav-token"


// Before calling a function within dwolla.js to add a new funding source, you need to generate a funding sources token. Your server initiates a POST request to Dwolla, specifying for which Dwolla account or white label Customer you want to add a bank account. Dwolla will respond with a funding sources token that expires in an hour. This token will be sent to the client and used to authenticate the HTTP request asking Dwolla to add a new funding source.nn### Resourcesnn[Article - Using dwolla.js to

@name("Create A Customer Funding Sources Token For Dwolla.js")
POST "https://{{baseUrl}}/customers/:customerId/funding-sources-token"



