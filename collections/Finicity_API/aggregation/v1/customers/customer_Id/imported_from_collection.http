#!/usr/bin/env dothttp

# imported from 35240-7c1911c0-b9d3-49c2-a1c8-b51e46787741.postman_collection.json

// base-inherit-auth

@name("base-inherit-auth")
GET "https://"


// Get the details for the specified customer. The service will return HTTP 200 upon a successful call. If the customer does not exist, the service will return HTTP 404.

@name("Get Customer") : "base-inherit-auth"
GET "https://{{baseUrl}}/aggregation/v1/customers/:customerId"
"Content-Length": "voluptate aute dolor est laborum"


// Modify the details for an enrolled customer. You must specify either the first name, the last name, or both in the request.
// 
// If the service is successful, HTTP 204 (No Content) will be returned.

@name("Modify Customer") : "base-inherit-auth"
PUT "https://{{baseUrl}}/aggregation/v1/customers/:customerId"
"Content-Type": "application/json"
json({
    "firstName": "John",
    "lastName": "Smith"
})


// Completely remove a customer from the system. This will remove the customer and all associated accounts and transactions.
// 
// (Note that the request and response is the same for JSON or XML clients.)
// 
// Use this service carefully! It will not pause for confirmation before performing the operation!
// 
// Success: HTTP 204 (No Content)

@name("Delete Customer") : "base-inherit-auth"
DELETE "https://{{baseUrl}}/aggregation/v1/customers/:customerId"


// Get details for all active accounts owned by the specified customer at the specified institution.

@name("Get Customer Accounts By Institution") : "base-inherit-auth"
GET "https://{{baseUrl}}/aggregation/v1/customers/:customerId/institutions/:institutionId/accounts"


// Get the details for the specified customer with additional details that includes the OAuth application info. The service will return HTTP 200 upon a successful call. If the customer does not exist, the service will return HTTP 404.

@name("Get Customer With Application Data") : "base-inherit-auth"
GET "https://{{baseUrl}}/aggregation/v1/customers/:customerId/application"


// Services to store a pay statement for a customer. Within the body of the request, the base 64 encoded value of the pay statement must be passed with a label.

@name("StoreCustomerPayStatement") : "base-inherit-auth"
POST "https://{{baseUrl}}/aggregation/v1/customers/:customerId/payStatements"
"Finicity-App-Key": "Lorem consectetur culpa deserunt dolore"
"Finicity-App-Token": "Lorem consectetur culpa deserunt dolore"
"Content-Type": "application/json"
data('"{\n\n    \"label\":lastPayPeriod,\n\n    \"statement\":{bytes of image}\n\n}"')


// Delete a specific subscription to TxPush notifications for the indicated account. This could be individual deleting the account or transactions events. No more events will be sent for that specific subscription.

@name("Delete TxPush Subscription") : "base-inherit-auth"
DELETE "https://{{baseUrl}}/aggregation/v1/customers/:customerId/subscriptions/:subscriptionId"


// If you have multiple applications for a single client, and you want to register their applications to access financial institutions using OAuth connections, then use this API to assign all applications to an existing customer.

@name("Set Customer Application ID") : "base-inherit-auth"
PUT "https://{{baseUrl}}/aggregation/v1/customers/:customerId/applications/:applicationId"


// Retrieve a binary file with the given assetId. The returned content type is always application/octet-stream. If the service successfully retrieves the asset, HTTP 200 (OK) will be returned. If the asset doesnâ€™t exist, HTTP 404 (Not Found) will be returned. If you would like to see an error message on the return, include application/json or application/xml in your desired format for the Accept header.

@name("Get Asset by Customer ID") : "base-inherit-auth"
GET "https://{{baseUrl}}/aggregation/v1/customers/:customerId/assets/:assetId"



