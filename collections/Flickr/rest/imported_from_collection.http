#!/usr/bin/env dothttp

# imported from 35240-d780e4be-2e05-4b95-b36a-30d473a592ed.postman_collection.json

// Returns a list of recent activity on photos commented on by the calling user. Do not poll this method more than once an hour.

@name("Activity User Comments")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.activity.userComments"
? "api_key"= "<>"
? "format"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Returns a list of recent activity on photos commented on by the calling user. Do not poll this method more than once an hour.

@name("Activity User Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.activity.userPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "timeframe"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Returns the credentials attached to an authentication token. This call must be signed as specified in the authentication API spec.

@name("Auth Check Token")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.auth.checkToken"
? "api_key"= "<>"
? "format"= "<>"
? "auth_token"= "<>"


// Returns a frob to be used during authentication. This method call must be signed, and is deprecated in favour of OAuth.

@name("Auth Get Frob")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.auth.getFrob"
? "api_key"= "<>"
? "format"= "<>"


// Get the full authentication token for a mini-token. This method call must be signed.

@name("Auth Get Full Token")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.auth.getFullToken"
? "api_key"= "<>"
? "format"= "<>"
? "mini_token"= "<>"


// Returns the auth token for the given frob, if one has been attached. This method call must be signed, and is deprecated in favour of OAuth.

@name("Auth Get Token")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.auth.getToken"
? "api_key"= "<>"
? "format"= "<>"
? "frob"= "<>"


// Exchange an auth token from the old Authentication API, to an OAuth access token. Calling this method will delete the auth token used to make the request. The request must be signed.

@name("Auth Oauth Get Access Token")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.auth.oauth.getAccessToken"
? "api_key"= "<>"
? "format"= "<>"


// Get a list of configured blogs for the calling user.

@name("Blogs Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.blogs.getList"
? "api_key"= "<>"
? "format"= "<>"
? "service"= "<>"


// Returns a list of Flickr supported blogging services.

@name("Blogs Get Services")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.blogs.getServices"
? "api_key"= "<>"
? "format"= "<>"


// Posts a photo to a blog.

@name("Blogs Add Photo")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.blogs.postPhoto"
? "api_key"= "<>"
? "format"= "<>"
? "blog_id"= "<>"
? "photo_id"= "<>"
? "title"= "<>"
? "description"= "<>"
? "blog_password"= "<>"
? "service"= "<>"


// Returns information for a single collection. Currently can only be called by the collection owner, this may change.

@name("Collections Get Info")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.collections.getInfo"
? "api_key"= "<>"
? "format"= "<>"
? "collection_id"= "<>"


// Returns a tree (or sub tree) of collections belonging to a given user.

@name("Collections Get Tree")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.collections.getTree"
? "api_key"= "<>"
? "format"= "<>"
? "collection_id"= "<>"
? "user_id"= "<>"


// Retrieves a list of the current Commons institutions.

@name("Commons Get Institutions")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.commons.getInstitutions"
? "api_key"= "<>"
? "format"= "<>"


// Get a list of contacts for the calling user.

@name("Contacts Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.contacts.getList"
? "api_key"= "<>"
? "format"= "<>"
? "filter"= "<>"
? "page"= "<>"
? "per_page"= "<>"


// Return a list of contacts for a user who have recently uploaded photos along with the total count of photos uploaded. This method is still considered experimental. We don't plan for it to change or to go away but so long as this notice is present you should write your code accordingly.

@name("Contacts Get List Recently Uploaded")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.contacts.getListRecentlyUploaded"
? "api_key"= "<>"
? "format"= "<>"
? "date_lastupload"= "<>"
? "filter"= "<>"


// Get the contact list for a user.

@name("Contacts Get Public List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.contacts.getPublicList"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"
? "page"= "<>"
? "per_page"= "<>"


// Adds a photo to a user's favorites list.

@name("Favorites Add")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.favorites.add"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Returns a list of the user's favorite photos. Only photos which the calling user has permission to see are returned.

@name("Favorites Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.favorites.getList"
? "api_key"= "<>"
? "format"= "<>"
? "min_fave_date"= "<>"
? "max_fave_date"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Returns a list of favorite public photos for the given user.

@name("Favorites Get Public List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.favorites.getPublicList"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"
? "min_fave_date"= "<>"
? "max_fave_date"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Adds a photo to a user's favorites list.

@name("Favorites Remove")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.favorites.remove"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Add a photo to a gallery.

@name("Galleries Add Photo")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.galleries.addPhoto"
? "api_key"= "<>"
? "gallery_id"= "<>"
? "photo_id"= "<>"
? "comment"= "<>"


// Create a new gallery for the calling user.

@name("Galleries Create")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.galleries.create"
? "api_key"= "<>"
? "format"= "<>"
? "title"= "<>"
? "description"= "<>"
? "primary_photo_id"= "<>"


// Modify the metadata for a gallery.

@name("Galleries Edit Meta")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.galleries.editMeta"
? "api_key"= "<>"
? "gallery_id"= "<>"
? "title"= "<>"
? "description"= "<>"


// Edit the comment for a gallery photo.

@name("Galleries Edit Photo")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.galleries.editPhoto"
? "api_key"= "<>"
? "gallery_id"= "<>"
? "photo_id"= "<>"
? "comment"= "<>"


// Modify the photos in a gallery. Use this method to add, remove and re-order photos.

@name("Galleries Edit Photos")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.galleries.editPhotos"
? "api_key"= "<>"
? "gallery_id"= "<>"
? "primary_photo_id"= "<>"
? "photo_ids"= "<>"


// Returns information about a gallery.

@name("Galleries Get Info")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.galleries.getInfo"
? "api_key"= "<>"
? "format"= "<>"
? "gallery_id"= "<>"


// Return the list of galleries created by a user. Sorted from newest to oldest.

@name("Galleries Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.galleries.getList"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Return the list of galleries to which a photo has been added. Galleries are returned sorted by date which the photo was added to the gallery.

@name("Galleries Get List For Photo")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.galleries.getListForPhoto"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Return the list of photos for a gallery.

@name("Galleries Get Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.galleries.getPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "gallery_id"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Browse the group category tree, finding groups and sub-categories.

@name("Groups Browse")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.groups.browse"
? "api_key"= "<>"
? "format"= "<>"
? "cat_id"= "<>"


// Get information about a group.

@name("Groups Get Info")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.groups.getInfo"
? "api_key"= "<>"
? "format"= "<>"
? "group_id"= "<>"
? "lang"= "<>"


// Search for groups. 18+ groups will only be returned for authenticated calls where the authenticated user is over 18.

@name("Groups Search")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.groups.search"
? "api_key"= "<>"
? "format"= "<>"
? "text"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get a list of the members of a group. The call must be signed on behalf of a Flickr member, and the ability to see the group membership will be determined by the Flickr member's group privileges.

@name("Groups Members Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.groups.members.getList"
? "api_key"= "<>"
? "format"= "<>"
? "group_id"= "<>"
? "membertypes"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Add a photo to a group's pool.

@name("Groups Pools Add")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.groups.pools.add"
? "api_key"= "<>"
? "photo_id"= "<>"
? "group_id"= "<>"


// Returns next and previous photos for a photo in a group pool.

@name("Groups Pools Get Context")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.groups.pools.getContext"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "group_id"= "<>"


// Returns a list of groups to which you can add photos.

@name("Groups Pools Get Groups")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.groups.pools.getGroups"
? "api_key"= "<>"
? "format"= "<>"
? "page"= "<>"
? "per_page"= "<>"


// Returns a list of pool photos for a given group, based on the permissions of the group and the user logged in (if any).

@name("Groups Pools Get Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.groups.pools.getPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "tags"= "<>"
? "user_id"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Remove a photo from a group pool.

@name("Groups Pools Remove")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.groups.pools.remove"
? "api_key"= "<>"
? "photo_id"= "<>"
? "group_id"= "<>"


// Returns the list of interesting photos for the most recent day or a user-specified date.

@name("Interestingness Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.interestingness.getList"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Return a list of unique namespaces, optionally limited by a given predicate, in alphabetical order.

@name("Machinetags Get Namespaces")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.machinetags.getNamespaces"
? "api_key"= "<>"
? "format"= "<>"
? "predicate"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Return a list of unique namespace and predicate pairs, optionally limited by predicate or namespace, in alphabetical order.

@name("Machinetags Get Pairs")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.machinetags.getPairs"
? "api_key"= "<>"
? "format"= "<>"
? "namespace"= "<>"
? "predicate"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Return a list of unique predicates, optionally limited by a given namespace.

@name("Machinetags Get Predicates")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.machinetags.getPredicates"
? "api_key"= "<>"
? "format"= "<>"
? "namespace"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Fetch recently used (or created) machine tags values.

@name("Machinetags Get Recent Values")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.machinetags.getRecentValues"
? "api_key"= "<>"
? "format"= "<>"
? "namespace"= "<>"
? "predicate"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Return a list of unique values for a namespace and predicate.

@name("Machinetags Get Values")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.machinetags.getValues"
? "api_key"= "<>"
? "format"= "<>"
? "namespace"= "<>"
? "predicate"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Return a list of Flickr pandas, from whom you can request photos using the flickr.panda.getPhotos API method. More information about the pandas can be found on the dev blog.

@name("Panda Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.panda.getList"
? "api_key"= "<>"
? "format"= "<>"


// Ask the Flickr Pandas for a list of recent public (and "safe") photos. More information about the pandas can be found on the dev blog.

@name("Panda Get Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.panda.getPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "panda_name"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Return a user's NSID, given their email address

@name("People Find By Email")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.people.findByEmail"
? "api_key"= "<>"
? "format"= "<>"
? "find_email"= "<>"


// Return a user's NSID, given their username.

@name("People Find By Username")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.people.findByUsername"
? "api_key"= "<>"
? "format"= "<>"
? "username"= "<>"


// Get information about a user.

@name("People Get Info")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.people.getInfo"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"


// Return photos from the given user's photostream. Only photos visible to the calling user will be returned. This method must be authenticated; to return public photos for a user, use flickr.people.getPublicPhotos.

@name("People Get Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.people.getPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"
? "safe_search"= "<>"
? "min_upload_date"= "<>"
? "max_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"
? "content_type"= "<>"
? "privacy_filter"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Returns a list of photos containing a particular Flickr member.

@name("People Get Photos Of")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.people.getPhotosOf"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"
? "owner_id"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Returns the list of public groups a user is a member of.

@name("People Get Public Groups")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.people.getPublicGroups"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"


// Get a list of public photos for the given user.

@name("People Get Public Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.people.getPublicPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"
? "safe_search"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Returns information for the calling user related to photo uploads.

@name("People Get Upload Status")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.people.getUploadStatus"
? "api_key"= "<>"
? "format"= "<>"


// Add tags to a photo.

@name("Photos Add Tags")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.addTags"
? "api_key"= "<>"
? "photo_id"= "<>"
? "tags"= "<>"


// Delete a photo from Flickr.

@name("Photos Delete")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.delete"
? "api_key"= "<>"
? "photo_id"= "<>"


// Returns all visible sets and pools the photo belongs to.

@name("Photos Get All Contexts")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getAllContexts"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Fetch a list of recent photos from the calling users' contacts.

@name("Photos Get Contacts Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getContactsPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "count"= "<>"
? "just_friends"= "<>"
? "single_photo"= "<>"
? "include_self"= "<>"
? "extras"= "<>"


// Fetch a list of recent public photos from a users' contacts.

@name("Photos Get Contacts Public Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getContactsPublicPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"
? "count"= "<>"
? "just_friends"= "<>"
? "single_photo"= "<>"
? "include_self"= "<>"
? "extras"= "<>"


// Returns next and previous photos for a photo in a photostream.

@name("Photos Get Context")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getContext"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Returns next and previous photos for a photo in a photostream.

@name("Photos Get Counts")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getCounts"
? "api_key"= "<>"
? "format"= "<>"
? "dates"= "<>"
? "taken_dates"= "<>"


// Retrieves a list of EXIF/TIFF/GPS tags for a given photo. The calling user must have permission to view the photo.

@name("Photos Get Exif")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getExif"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "secret"= "<>"


// Returns the list of people who have favorited a given photo.

@name("Photos Get Favorites")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getFavorites"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "page"= "<>"
? "per_page"= "<>"


// Get information about a photo. The calling user must have permission to view the photo.

@name("Photos Get Info")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getInfo"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "secret"= "<>"


// Returns a list of your photos that are not part of any sets.

@name("Photos Get Not In Set")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getNotInSet"
? "api_key"= "<>"
? "format"= "<>"
? "max_upload_date"= "<>"
? "min_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"
? "privacy_filter"= "<>"
? "media"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get permissions for a photo.

@name("Photos Get Perms")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getPerms"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Returns the list of people who have favorited a given photo.

@name("Photos Get Recent")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getRecent"
? "api_key"= "<>"
? "format"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Returns the available sizes for a photo. The calling user must have permission to view the photo.

@name("Photos Get Sizes")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getSizes"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Returns a list of your photos that are not tagged.

@name("Photos Get Untagged")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getUntagged"
? "api_key"= "<>"
? "format"= "<>"
? "max_upload_date"= "<>"
? "min_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"
? "privacy_filter"= "<>"
? "media"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Returns a list of your geo-tagged photos.

@name("Photos Get With Geo Data")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getWithGeoData"
? "api_key"= "<>"
? "format"= "<>"
? "max_upload_date"= "<>"
? "min_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"
? "privacy_filter"= "<>"
? "media"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Returns a list of your photos which haven't been geo-tagged.

@name("Photos Get Without Geo Data")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getWithoutGeoData"
? "api_key"= "<>"
? "format"= "<>"
? "max_upload_date"= "<>"
? "min_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"
? "privacy_filter"= "<>"
? "media"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Return a list of your photos that have been recently created or which have been recently modified. Recently modified may mean that the photo's metadata (title, description, tags) may have been changed or a comment has been added (or just modified somehow :-)

@name("Photos Get Recently Updated")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.getRecentlyUpdated"
? "api_key"= "<>"
? "format"= "<>"
? "min_date"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Remove a tag from a photo.

@name("Photos Remove Tag")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.removeTag"
? "api_key"= "<>"
? "photo_id"= "<>"
? "tag_id"= "<>"


// Return a list of photos matching some criteria. Only photos visible to the calling user will be returned. To return private or semi-private photos, the caller must be authenticated with 'read' permissions, and have permission to view the photos. Unauthenticated calls will only return public photos.

@name("Photos Search")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.search"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"
? "tags"= "<>"
? "tag_mode"= "<>"
? "text"= "<>"
? "min_upload_date"= "<>"
? "max_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"
? "license"= "<>"
? "sort"= "<>"
? "privacy_filter"= "<>"
? "hbox"= "<>"
? "accuracy"= "<>"
? "safe_search"= "<>"
? "content_type"= "<>"
? "machine_tags"= "<>"
? "machine_tag_mode"= "<>"
? "group_id"= "<>"
? "contacts"= "<>"
? "woe_id"= "<>"
? "place_id"= "<>"
? "media"= "<>"
? "has_geo"= "<>"
? "geo_context"= "<>"
? "lat"= "<>"
? "lon"= "<>"
? "radius"= "<>"
? "radius_units"= "<>"
? "is_commons"= "<>"
? "is_gallery"= "<>"
? "is_getty"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Set the content type of a photo.

@name("Photos Set Content Type")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.setContentType"
? "api_key"= "<>"
? "photo_id"= "<>"
? "content_type"= "<>"


// Set one or both of the dates for a photo.

@name("Photos Set Dates")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.setDates"
? "api_key"= "<>"
? "photo_id"= "<>"
? "date_posted"= "<>"
? "date_taken"= "<>"
? "date_taken_granularity"= "<>"


// Set the meta information for a photo.

@name("Photos Set Meta")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.setMeta"
? "api_key"= "<>"
? "photo_id"= "<>"
? "title"= "<>"
? "description"= "<>"


// Set permissions for a photo.

@name("Photos Set Perms")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.setPerms"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "is_public"= "<>"
? "is_friend"= "<>"
? "is_family"= "<>"
? "perm_comment"= "<>"
? "perm_addmeta"= "<>"


// Set the safety level of a photo.

@name("Photos Set Safety Level")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.setSafetyLevel"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "safety_level"= "<>"
? "hidden"= "<>"


// Set the tags for a photo.

@name("Photos Set Tags")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.setTags"
? "api_key"= "<>"
? "photo_id"= "<>"
? "tags"= "<>"


// Add comment to a photo as the currently authenticated user.

@name("Photos Comments Add Comment")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.comments.addComment"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "comment_text"= "<>"


// Delete comment as the currently authenticated user.

@name("Photos Comments Delete Comment")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.comments.deleteComment"
? "api_key"= "<>"
? "photo_id"= "<>"


// Edit the text of a comment as the currently authenticated user.

@name("Photos Comments Edit Comment")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.comments.editComment"
? "api_key"= "<>"
? "comment_id"= "<>"
? "comment_text"= "<>"


// Returns the comments for a photo.

@name("Photos Comments Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.comments.getList"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "min_comment_date"= "<>"
? "max_comment_date"= "<>"


// Return the list of photos belonging to your contacts that have been commented on recently.

@name("Photos Comments Get Recent For Contacts")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.comments.getRecentForContacts"
? "api_key"= "<>"
? "format"= "<>"
? "date_lastcomment"= "<>"
? "contacts_filter"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Correct the places hierarchy for all the photos for a user at a given latitude, longitude and accuracy. Batch corrections are processed in a delayed queue so it may take a few minutes before the changes are reflected in a user's photos.

@name("Photos Geo Batch Correct Location")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.geo.batchCorrectLocation"
? "api_key"= "<>"
? "lat"= "<>"
? "lon"= "<>"
? "accuracy"= "<>"
? "place_id"= "<>"
? "woe_id"= "<>"


// Corrects a photo's location.

@name("Photos Geo Correct Location")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.geo.correctLocation"
? "api_key"= "<>"
? "photo_id"= "<>"
? "place_id"= "<>"
? "woe_id"= "<>"


// Get the geo data (latitude and longitude and the accuracy level) for a photo.

@name("Photos Geo Get Location")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.geo.getLocation"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Get permissions for who may view geo data for a photo.

@name("Photos Geo Get Perms")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.geo.getPerms"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Return a list of photos for the calling user at a specific latitude, longitude and accuracy

@name("Photos Geo Photos For Location")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.geo.photosForLocation"
? "api_key"= "<>"
? "format"= "<>"
? "lat"= "<>"
? "lon"= "<>"
? "accuracy"= "<>"
? "extras"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Removes the geo data associated with a photo.

@name("Photos Geo Remove Location")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.geo.removeLocation"
? "api_key"= "<>"
? "photo_id"= "<>"


// Indicate the state of a photo's geotagginess beyond latitude and longitude. Note : photos passed to this method must already be geotagged (using the flickr.photos.geo.setLocation method).

@name("Photos Geo Set Context")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.geo.setContext"
? "api_key"= "<>"
? "photo_id"= "<>"
? "context"= "<>"


// Sets the geo data (latitude and longitude and, optionally, the accuracy level) for a photo. Before users may assign location data to a photo they must define who, by default, may view that information. Users can edit this preference at http://www.flickr.com/account/geo/privacy/. If a user has not set this preference, the API method will return an error.

@name("Photos Geo Set Location")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.geo.setLocation"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "lat"= "<>"
? "lon"= "<>"
? "accuracy"= "<>"
? "context"= "<>"


// Set the permission for who may view the geo data associated with a photo.

@name("Photos Geo Set Perms")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.geo.setPerms"
? "api_key"= "<>"
? "is_public"= "<>"
? "is_contact"= "<>"
? "is_friend"= "<>"
? "is_family"= "<>"
? "photo_id"= "<>"


// Fetches a list of available photo licenses for Flickr.

@name("Photos Licenses Get Info")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.licenses.getInfo"
? "api_key"= "<>"
? "format"= "<>"


// Sets the license for a photo.

@name("Photos Licenses Set Info")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.licenses.setInfo"
? "api_key"= "<>"
? "photo_id"= "<>"
? "license_id"= "<>"


// Add a note to a photo. Coordinates and sizes are in pixels, based on the 500px image size shown on individual photo pages.

@name("Photos Notes Add")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.notes.add"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "note_x"= "<>"
? "note_y"= "<>"
? "note_w"= "<>"
? "note_h"= "<>"
? "note_text"= "<>"


// Delete a note from a photo.

@name("Photos Notes Delete")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.notes.delete"
? "api_key"= "<>"
? "note_id"= "<>"


// Edit a note on a photo. Coordinates and sizes are in pixels, based on the 500px image size shown on individual photo pages.

@name("Photos Notes Edit")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.notes.edit"
? "api_key"= "<>"
? "note_id"= "<>"
? "note_x"= "<>"
? "note_y"= "<>"
? "note_w"= "<>"
? "note_h"= "<>"
? "note_text"= "<>"


// Add a person to a photo. Coordinates and sizes are in pixels, based on the 500px image size shown on individual photo pages.

@name("Photos People Add")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.people.add"
? "api_key"= "<>"
? "photo_id"= "<>"
? "user_id"= "<>"
? "person_x"= "<>"
? "person_y"= "<>"
? "person_w"= "<>"
? "person_h"= "<>"


// Remove a person from a photo.

@name("Photos People Delete")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.people.delete"
? "api_key"= "<>"
? "photo_id"= "<>"
? "user_id"= "<>"


// Remove the bounding box from a person in a photo

@name("Photos People Delete Coords")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.people.deleteCoords"
? "api_key"= "<>"
? "photo_id"= "<>"
? "user_id"= "<>"


// Edit the bounding box of an existing person on a photo.

@name("Photos People Edit Coords")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.people.editCoords"
? "api_key"= "<>"
? "photo_id"= "<>"
? "user_id"= "<>"
? "person_x"= "<>"
? "person_y"= "<>"
? "person_w"= "<>"
? "person_h"= "<>"


// Get a list of people in a given photo.

@name("Photos People Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.people.getList"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Rotate a photo.

@name("Photos Transform Rotate")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.transform.rotate"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "degrees"= "<>"


// Checks the status of one or more asynchronous photo upload tickets.

@name("Photos Upload Check Tickets")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photos.upload.checkTickets"
? "api_key"= "<>"
? "format"= "<>"
? "tickets"= "<>"


// Add a photo to the end of an existing photoset.

@name("Photosets Add Photo")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.addPhoto"
? "api_key"= "<>"
? "photoset_id"= "<>"
? "photo_id"= "<>"


// Create a new photoset for the calling user.

@name("Photosets Create")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.create"
? "api_key"= "<>"
? "format"= "<>"
? "title"= "<>"
? "description"= "<>"
? "primary_photo_id"= "<>"


// Delete a new photoset.

@name("Photosets Delete")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.delete"
? "api_key"= "<>"
? "photoset_id"= "<>"


// Modify the meta-data for a photoset.

@name("Photosets Edit Meta")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.editMeta"
? "api_key"= "<>"
? "photoset_id"= "<>"
? "title"= "<>"
? "description"= "<>"


// Modify the photos in a photoset. Use this method to add, remove and re-order photos.

@name("Photosets Edit Photos")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.editPhotos"
? "api_key"= "<>"
? "photoset_id"= "<>"
? "primary_photo_id"= "<>"
? "photo_ids"= "<>"


// Returns next and previous photos for a photo in a set.

@name("Photosets Get Context")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.getContext"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"
? "photoset_id"= "<>"


// Gets information about a photoset.

@name("Photosets Get Info")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.getInfo"
? "api_key"= "<>"
? "format"= "<>"
? "photoset_id"= "<>"


// Returns the photosets belonging to the specified user.

@name("Photosets Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.getList"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"


// Get the list of photos in a set.

@name("Photosets Get Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.getPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "photoset_id"= "<>"
? "extras"= "<>"
? "privacy_filter"= "<>"
? "media"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Set the order of photosets for the calling user.

@name("Photosets Order Sets")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.orderSets"
? "api_key"= "<>"
? "photoset_ids"= "<>"


// Remove a photo from a photoset.

@name("Photosets Remove Photo")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.removePhoto"
? "api_key"= "<>"
? "photoset_id"= "<>"
? "photo_id"= "<>"


// Remove multiple photos from a photoset.

@name("Photosets Remove Photos")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.removePhotos"
? "api_key"= "<>"
? "photoset_id"= "<>"
? "photo_ids"= "<>"


// Update the order of photos in a photoset.

@name("Photosets Reorder Photos")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.reorderPhotos"
? "api_key"= "<>"
? "photoset_id"= "<>"
? "photo_ids"= "<>"


// Set photoset primary photo

@name("Photosets Set Primary Photo")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.setPrimaryPhoto"
? "api_key"= "<>"
? "photoset_id"= "<>"
? "photo_id"= "<>"


// Add a comment to a photoset.

@name("Photosets Comments Add Comment")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.comments.addComment"
? "api_key"= "<>"
? "format"= "<>"
? "photoset_id"= "<>"
? "comment_text"= "<>"


// Delete a photoset comment as the currently authenticated user.

@name("Photosets Comments Delete Comment")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.comments.deleteComment"
? "api_key"= "<>"
? "comment_id"= "<>"


// Edit the text of a comment as the currently authenticated user.

@name("Photosets Comments Edit Comment")
POST "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.comments.editComment"
? "api_key"= "<>"
? "comment_id"= "<>"
? "comment_text"= "<>"


// Returns the comments for a photoset.

@name("Photosets Comments Get List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.photosets.comments.getList"
? "api_key"= "<>"
? "format"= "<>"
? "photoset_id"= "<>"


// Return a list of place IDs for a query string.

@name("Places Find")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.find"
? "api_key"= "<>"
? "format"= "<>"
? "query"= "<>"


// Return a place ID for a latitude, longitude and accuracy triple.

@name("Places Find By Lat Lon")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.findByLatLon"
? "api_key"= "<>"
? "format"= "<>"
? "lat"= "<>"
? "lon"= "<>"
? "accuracy"= "<>"


// Return a list of locations with public photos that are parented by a Where on Earth (WOE) or Places ID.

@name("Places Get Children With Photos Public")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.getChildrenWithPhotosPublic"
? "api_key"= "<>"
? "format"= "<>"
? "place_id"= "<>"
? "woe_id"= "<>"


// Get information about a place.

@name("Places Get Info")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.getInfo"
? "api_key"= "<>"
? "format"= "<>"
? "place_id"= "<>"
? "woe_id"= "<>"


// Lookup information about a place, by its flickr.com/places URL.

@name("Places Get Info By Url")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.getInfoByUrl"
? "api_key"= "<>"
? "format"= "<>"
? "url"= "<>"


// Fetches a list of available place types for Flickr.

@name("Places Get Place Types")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.getPlaceTypes"
? "api_key"= "<>"
? "format"= "<>"


// Return an historical list of all the shape data generated for a Places or Where on Earth (WOE) ID.

@name("Places Get Shape History")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.getShapeHistory"
? "api_key"= "<>"
? "format"= "<>"
? "place_id"= "<>"
? "woe_id"= "<>"


// Return the top 100 most geotagged places for a day.

@name("Places Get Top Places List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.getTopPlacesList"
? "api_key"= "<>"
? "format"= "<>"
? "place_type_id"= "<>"
? "date"= "<>"
? "woe_id"= "<>"
? "place_id"= "<>"


// Return all the locations of a matching place type for a bounding box.

@name("Places Places For Bounding Box")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.placesForBoundingBox"
? "api_key"= "<>"
? "format"= "<>"
? "bbox"= "<>"
? "place_type_id"= "<>"
? "place_type"= "<>"


// Return a list of the top 100 unique places clustered by a given placetype for a user's contacts.

@name("Places Places For Contacts")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.placesForContacts"
? "api_key"= "<>"
? "format"= "<>"
? "place_type_id"= "<>"
? "place_type"= "<>"
? "woe_id"= "<>"
? "place_id"= "<>"
? "threshold"= "<>"
? "contacts"= "<>"
? "min_upload_date"= "<>"
? "max_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"


// Return a list of the top 100 unique places clustered by a given placetype for set of tags or machine tags.

@name("Places Places For Tags")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.placesForTags"
? "api_key"= "<>"
? "format"= "<>"
? "place_type_id"= "<>"
? "woe_id"= "<>"
? "place_id"= "<>"
? "threshold"= "<>"
? "tags"= "<>"
? "tag_mode"= "<>"
? "machine_tags"= "<>"
? "machine_tag_mode"= "<>"
? "min_upload_date"= "<>"
? "max_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"


// Return a list of the top 100 unique places clustered by a given placetype for a user.

@name("Places Places For User")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.placesForUser"
? "api_key"= "<>"
? "format"= "<>"
? "place_type_id"= "<>"
? "place_type"= "<>"
? "woe_id"= "<>"
? "place_id"= "<>"
? "threshold"= "<>"
? "min_upload_date"= "<>"
? "max_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"


// Find Flickr Places information by Place ID. This method has been deprecated. It won't be removed but you should use flickr.places.getInfo instead.

@name("Places Resolve Place Id")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.resolvePlaceId"
? "api_key"= "<>"
? "format"= "<>"
? "place_id"= "<>"


// Find Flickr Places information by Place URL. This method has been deprecated. It won't be removed but you should use flickr.places.getInfo instead.

@name("Places Resolve Place U R L")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.resolvePlaceURL"
? "api_key"= "<>"
? "format"= "<>"
? "url"= "<>"


// Return a list of the top 100 unique tags for a Flickr Places or Where on Earth (WOE) ID.

@name("Places Tags For Place")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.places.tagsForPlace"
? "api_key"= "<>"
? "format"= "<>"
? "woe_id"= "<>"
? "place_id"= "<>"
? "min_upload_date"= "<>"
? "max_upload_date"= "<>"
? "min_taken_date"= "<>"
? "max_taken_date"= "<>"


// Returns the default content type preference for the user.

@name("Prefs Get Content Type")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.prefs.getContentType"
? "api_key"= "<>"
? "format"= "<>"


// Returns the default privacy level for geographic information attached to the user's photos and whether or not the user has chosen to use geo-related EXIF information to automatically geotag their photos.

@name("Prefs Get Geo Perms")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.prefs.getGeoPerms"
? "api_key"= "<>"
? "format"= "<>"


// Returns the default hidden preference for the user.

@name("Prefs Get Hden")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.prefs.getHidden"
? "api_key"= "<>"
? "format"= "<>"


// Returns the default privacy level preference for the user.

@name("Prefs Get Privacy")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.prefs.getPrivacy"
? "api_key"= "<>"
? "format"= "<>"


// Returns the default safety level preference for the user.

@name("Prefs Get Safety Level")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.prefs.getSafetyLevel"
? "api_key"= "<>"
? "format"= "<>"


// Returns information for a given Flickr API method.

@name("Reflection Get Method Info")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.reflection.getMethodInfo"
? "api_key"= "<>"
? "format"= "<>"
? "method_name"= "<>"


// Returns a list of available Flickr API methods.

@name("Reflection Get Methods")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.reflection.getMethods"
? "api_key"= "<>"
? "format"= "<>"


// Get a list of referring domains for a collection

@name("Stats Get Collection Domains")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getCollectionDomains"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "collection_id"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get a list of referrers from a given domain to a collection

@name("Stats Get Collection Referrers")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getCollectionReferrers"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "domain"= "<>"
? "collection_id"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get the number of views on a collection for a given date.

@name("Stats Get Collection Stats")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getCollectionStats"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "collection_id"= "<>"


// Get a list of referring domains for a photo.

@name("Stats Get Photo Domains")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPhotoDomains"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "photo_id"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get a list of referring domains for a photo.

@name("Stats Get Photo Referrers")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPhotoReferrers"
? "api_key"= "<>"
? "format"= "<>"
? "domain"= "<>"
? "photo_id"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get the number of views, comments and favorites on a photo for a given date.

@name("Stats Get Photo Stats")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPhotoStats"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "photo_id"= "<>"


// Get a list of referring domains for a photoset.

@name("Stats Get Photoset Domains")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPhotosetDomains"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "photoset_id"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get a list of referring domains for a photoset.

@name("Stats Get Photoset Referrers")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPhotosetReferrers"
? "api_key"= "<>"
? "format"= "<>"
? "domain"= "<>"
? "photoset_id"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get the number of views on a photoset for a given date.

@name("Stats Get Photoset Stats")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPhotosetStats"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "photoset_id"= "<>"


// Get a list of referring domains for a photostream.

@name("Stats Get Photostream Domains")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPhotostreamDomains"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get a list of referrers from a given domain to a user's photostream

@name("Stats Get Photostream Referrers")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPhotostreamReferrers"
? "api_key"= "<>"
? "format"= "<>"
? "domain"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get the number of views on a user's photostream for a given date.

@name("Stats Get Photostream Stats")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPhotostreamStats"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"


// List the photos with the most views, comments or favorites.

@name("Stats Get Popular Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getPopularPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"
? "sort"= "<>"
? "per_page"= "<>"
? "page"= "<>"


// Get the overall view counts for an account.

@name("Stats Get Total Views")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.stats.getTotalViews"
? "api_key"= "<>"
? "format"= "<>"
? "date"= "<>"


// Returns the first 24 photos for a given tag cluster.

@name("Tags Get Cluster Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.tags.getClusterPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "tag"= "<>"
? "cluster_id"= "<>"


// Returns a list of tag clusters for the given tag.

@name("Tags Get Clusters")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.tags.getClusters"
? "api_key"= "<>"
? "format"= "<>"
? "tag"= "<>"


// Returns a list of hot tags for the given period.

@name("Tags Get Hot List")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.tags.getHotList"
? "api_key"= "<>"
? "format"= "<>"
? "period"= "<>"
? "count"= "<>"


// Get the tag list for a given photo.

@name("Tags Get List Photo")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.tags.getListPhoto"
? "api_key"= "<>"
? "format"= "<>"
? "photo_id"= "<>"


// Get the tag list for a given user (or the currently logged in user).

@name("Tags Get List User")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.tags.getListUser"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"


// Get the popular tags for a given user (or the currently logged in user).

@name("Tags Get List User Popular")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.tags.getListUserPopular"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"
? "count"= "<>"


// Get the raw versions of a given tag (or all tags) for the currently logged-in user.

@name("Tags Get List User Raw")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.tags.getListUserRaw"
? "api_key"= "<>"
? "format"= "<>"
? "tag"= "<>"


// Returns a list of tags 'related' to the given tag, based on clustered usage analysis.

@name("Tags Get Related")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.tags.getRelated"
? "api_key"= "<>"
? "format"= "<>"
? "tag"= "<>"


// A testing method which echoes all parameters back in the response.

@name("Test Echo")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.test.echo"
? "api_key"= "<>"
? "format"= "<>"


// A testing method which checks if the caller is logged in then returns their username.

@name("Test Login")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.test.login"
? "api_key"= "<>"
? "format"= "<>"


// This method doesn't do anything.

@name("Test Null")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.test.null"
? "api_key"= "<>"


// Returns the url to a group's page.

@name("Urls Get Group")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.urls.getGroup"
? "api_key"= "<>"
? "format"= "<>"
? "group_id"= "<>"


// Returns the url to a user's photos.

@name("Urls Get User Photos")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.urls.getUserPhotos"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"


// Returns the url to a user's profile.

@name("Urls Get User Profile")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.urls.getUserProfile"
? "api_key"= "<>"
? "format"= "<>"
? "user_id"= "<>"


// Returns gallery info, by url.

@name("Urls Lookup Gallery")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.urls.lookupGallery"
? "api_key"= "<>"
? "format"= "<>"
? "url"= "<>"


// Returns a group NSID, given the url to a group's page or photo pool.

@name("Urls Lookup Group")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.urls.lookupGroup"
? "api_key"= "<>"
? "format"= "<>"
? "url"= "<>"


// Returns a user NSID, given the url to a user's photos or profile.

@name("Urls Lookup User")
GET "https://{{baseUrl}}/rest/"
? "method"= "flickr.urls.lookupUser"
? "api_key"= "<>"
? "format"= "<>"
? "url"= "<>"



