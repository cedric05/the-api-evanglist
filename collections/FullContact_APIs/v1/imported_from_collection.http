#!/usr/bin/env dothttp

# imported from 35240-cbe52561-c0c1-4a0b-9d4c-69380596376d.postman_collection.json

// Requests an access token for accessing resources from previously generated auth code. This is the only way to gain authorizing credentials for an account other than your own. A user must first be sent to the external authorization page and authorize your client id for access before you can gain the authorization code that must be supplied here. This can be referenced in the OAuth RFC Section 4.1.3. Once an auth code has been used, it will be invalidated and is unable to get additional access tokens. Instead to gain additional access tokens, the refresh token should be used if it was returned (may not be returned if auth code was constrained to a short expiration).

@name("Get Access Token")
POST "https://app.fullcontact.com/api/v1/oauth.exchangeAuthCode"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "code": [
        "<string>"
    ],
    "client_id": [
        "<string>"
    ],
    "client_secret": [
        "<string>"
    ],
    "redirect_uri": [
        "<string>"
    ]
})


// Requests a new access token from a refresh token that was provided when the previous access token was generated. Using the refresh token while there are still valid access tokens will NOT revoke those valid access tokens. Instead it will only create multiple access tokens with the same permissions as this refresh token has.

@name("Refresh Access Token")
POST "https://app.fullcontact.com/api/v1/oauth.refreshToken"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "client_id": [
        "<string>"
    ],
    "client_secret": [
        "<string>"
    ],
    "refresh_token": [
        "<string>"
    ]
})


// Checks to see if an access token is still valid for a given request.

@name("Validate Access Token")
POST "https://app.fullcontact.com/api/v1/auth.verifyAccessToken"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "access_token": [
        "<string>"
    ]
})


// Fetches the authenticated user's account information including name, photo, emails and more.

@name("Get Account")
POST "https://app.fullcontact.com/api/v1/account.get"
"Content-Type": "application/json"
data('"<object>"')


// Fetches one or more contacts by ID for the user or a team if `teamId` is supplied.

@name("Get Contacts by ID")
POST "https://app.fullcontact.com/api/v1/contacts.get"
"Content-Type": "application/json"
json({
    "contactIds": [
        "<string>",
        "<string>"
    ],
    "teamId": "<string>"
})


// Allows you to scroll through an entire list of the user's contacts using a scroll cursor for paging.

@name("List Contacts")
POST "https://app.fullcontact.com/api/v1/contacts.scroll"
"Content-Type": "application/json"
json({
    "size": "<integer>",
    "scrollCursor": "<string>",
    "includeDeletedContacts": "<boolean>",
    "teamId": "<string>"
})


// Full-text search for contacts. You can also used advanced search criteria and logical operators like `AND` and `OR`. Example: `firstName:John AND company:FullContact`.

@name("Search Contacts")
POST "https://app.fullcontact.com/api/v1/contacts.search"
"Content-Type": "application/json"
json({
    "searchQuery": "<string>",
    "searchCursor": "<string>",
    "tagIds": [
        "<string>",
        "<string>"
    ],
    "teamId": "<string>"
})


// Creates a new contact in the user's personal contacts or in a team's contacts if `teamId` is provided.

@name("Create a Contact")
POST "https://app.fullcontact.com/api/v1/contacts.create"
"Content-Type": "application/json"
json({
    "contact": {
        "contactId": "<string>",
        "etag": "<string>",
        "contactData": {
            "addresses": [
                {
                    "type": "ut sed dolor",
                    "street": "ipsum reprehenderit",
                    "city": "quis consectetur ut nostrud",
                    "region": "magna",
                    "postalCode": "Ut in voluptate",
                    "country": "dolor",
                    "extendedAddress": "id incididunt laborum velit quis"
                },
                {
                    "type": "id ut",
                    "street": "aute Ut",
                    "city": "cul",
                    "region": "nulla irure sit laborum",
                    "postalCode": "esse cupidatat",
                    "country": "in qui amet commodo",
                    "extendedAddress": "culpa"
                }
            ],
            "birthday": {
                "year": -59132564,
                "month": -26096071,
                "day": -76835002
            },
            "dates": [
                {
                    "type": "labore fugiat oc",
                    "month": 42329110,
                    "day": -24592885,
                    "year": 30517824
                },
                {
                    "type": "in elit consequat",
                    "month": 17393662,
                    "day": -26665981,
                    "year": -12404266
                }
            ],
            "emails": [
                {
                    "type": "Ut eiusmod dolore",
                    "value": "qui ad aute consequat"
                },
                {
                    "type": "fugiat",
                    "value": "consequat"
                }
            ],
            "name": {
                "givenName": "est irure",
                "familyName": "pariatur",
                "middleName": "amet",
                "prefix": "occaecat et incididunt",
                "suffix": "dolor Duis sunt irure"
            },
            "relatedPeople": [
                {
                    "type": "nulla officia ex",
                    "value": "minim elit"
                },
                {
                    "type": "dolore non nulla sit",
                    "value": "nostrud sed"
                }
            ],
            "organizations": [
                {
                    "name": "dolor",
                    "department": "anim minim in Ut",
                    "title": "ex elit",
                    "location": "m",
                    "description": "et ut sed deserunt ullamco",
                    "startDate": {
                        "year": -75110355,
                        "month": -19863334,
                        "day": 30269302
                    },
                    "endDate": {
                        "year": -10390021,
                        "month": -71561381,
                        "day": 82559243
                    }
                },
                {
                    "name": "Lorem aliquip",
                    "department": "ut labori",
                    "title": "nisi voluptate",
                    "location": "elit voluptate qui Excepteur",
                    "description": "sint ea in sed",
                    "startDate": {
                        "year": -4374047,
                        "month": 12814639,
                        "day": 40539628
                    },
                    "endDate": {
                        "year": 78713057,
                        "month": -19109929,
                        "day": -66704668
                    }
                }
            ],
            "urls": [
                {
                    "type": "magna Lorem dolor",
                    "value": "es",
                    "username": "ame",
                    "userId": "dolor incididunt sint dolore"
                },
                {
                    "type": "adipisicing",
                    "value": "tempor magna culpa laboris",
                    "username": "ad Duis commodo",
                    "userId": "non Duis id"
                }
            ],
            "notes": "ut mollit",
            "items": [
                {
                    "type": "q",
                    "value": "tempor ullamco"
                },
                {
                    "type": "officia commodo minim",
                    "value": "in elit"
                }
            ],
            "ims": [
                {
                    "type": "laboris non voluptate in",
                    "value": "aliquip Ut eiusmod deserunt"
                },
                {
                    "type": "velit fugiat eiusmod irure et",
                    "value": "aliqua nul"
                }
            ]
        }
    },
    "teamId": "<string>"
})


// Updates an existing contact in the user's personal contacts or in a team's contacts if `teamId` is provided.

@name("Update a Contact")
POST "https://app.fullcontact.com/api/v1/contacts.update"
"Content-Type": "application/json"
json({
    "contact": {
        "contactId": "<string>",
        "etag": "<string>",
        "contactData": {
            "addresses": [
                {
                    "type": "pariatur cupidatat ea",
                    "street": "magn",
                    "city": "ipsum",
                    "region": "reprehenderit adi",
                    "postalCode": "eu ad nulla",
                    "country": "non consectetur sint enim",
                    "extendedAddress": "culpa Excepteur laboris"
                },
                {
                    "type": "in",
                    "street": "incididunt pariatur in labore sit",
                    "city": "velit voluptate",
                    "region": "reprehenderit consequat",
                    "postalCode": "sit commodo",
                    "country": "ullamco ex sunt",
                    "extendedAddress": "nulla cillum anim Excepteur"
                }
            ],
            "birthday": {
                "year": -99204490,
                "month": -73898837,
                "day": 93261779
            },
            "dates": [
                {
                    "type": "id commodo",
                    "month": -8361525,
                    "day": -32261767,
                    "year": 99307749
                },
                {
                    "type": "in elit do in Ut",
                    "month": 97716615,
                    "day": 82361801,
                    "year": -75532070
                }
            ],
            "emails": [
                {
                    "type": "Lorem Ut commodo labore reprehenderit",
                    "value": "incididunt enim amet"
                },
                {
                    "type": "magna enim",
                    "value": "irure tem"
                }
            ],
            "name": {
                "givenName": "enim voluptate amet exercitation nostrud",
                "familyName": "eiusmod",
                "middleName": "amet reprehenderit fugiat in sunt",
                "prefix": "in",
                "suffix": "Ut enim"
            },
            "relatedPeople": [
                {
                    "type": "consectetur ex irure id",
                    "value": "dolor ad occaecat non officia"
                },
                {
                    "type": "sed elit adipisicing",
                    "value": "tempor culpa ullamco in"
                }
            ],
            "organizations": [
                {
                    "name": "enim",
                    "department": "amet",
                    "title": "in quis labore adipisicing consectetur",
                    "location": "nostrud adipisicing officia",
                    "description": "sed",
                    "startDate": {
                        "year": 90476928,
                        "month": -73377541,
                        "day": 1962849
                    },
                    "endDate": {
                        "year": -48513404,
                        "month": -93404714,
                        "day": 76194775
                    }
                },
                {
                    "name": "Ut ad Lorem",
                    "department": "pariatur reprehenderit anim aliqua",
                    "title": "anim officia elit",
                    "location": "officia aute Excepteur",
                    "description": "fugiat deserunt est nulla",
                    "startDate": {
                        "year": -1535715,
                        "month": 1822586,
                        "day": 76561326
                    },
                    "endDate": {
                        "year": -45068891,
                        "month": -69413887,
                        "day": -50649549
                    }
                }
            ],
            "urls": [
                {
                    "type": "fugiat sint",
                    "value": "esse aliquip dolore",
                    "username": "a",
                    "userId": "Duis"
                },
                {
                    "type": "dolor ut",
                    "value": "proident Duis in nulla dolore",
                    "username": "cillum ex",
                    "userId": "amet Lorem aute veniam"
                }
            ],
            "notes": "irure",
            "items": [
                {
                    "type": "proiden",
                    "value": "est"
                },
                {
                    "type": "voluptate dolore",
                    "value": "labore sunt minim Duis"
                }
            ],
            "ims": [
                {
                    "type": "cupidatat veniam",
                    "value": "venia"
                },
                {
                    "type": "Lorem officia eu in Ut",
                    "value": "aliquip irure"
                }
            ]
        }
    },
    "resolveConflicts": "<boolean>",
    "teamId": "<string>"
})


// Add or remove tags from multiple contacts in the user's personal contacts or in a team's contacts if `teamId` is provided.

@name("Manage Contact Tags")
POST "https://app.fullcontact.com/api/v1/contacts.manageTags"
"Content-Type": "application/json"
json({
    "contactIds": [
        "<string>",
        "<string>"
    ],
    "addTagIds": [
        "<string>",
        "<string>"
    ],
    "removeTagIds": [
        "<string>",
        "<string>"
    ],
    "teamId": "<string>"
})


// Deletes a contact in the user's personal contacts or in a team's contacts if `teamId` is provided.

@name("Delete a Contact")
POST "https://app.fullcontact.com/api/v1/contacts.delete"
"Content-Type": "application/json"
json({
    "contactId": "<string>",
    "etag": "<string>",
    "teamId": "<string>"
})


// Prepends a new photo to a user or team contact. The photo will then become the user's new default photo.

@name("Upload a Contact Photo")
POST "https://app.fullcontact.com/api/v1/contacts.uploadPhoto"
"Content-Type": "application/x-www-form-urlencoded"
data({
    "contact.json": [
        "<string>"
    ]
})


// Fetches one or more private tags or team tags if `teamId` is supplied.

@name("Get Tags by ID")
POST "https://app.fullcontact.com/api/v1/tags.get"
"Content-Type": "application/json"
json({
    "tagIds": [
        "<string>",
        "<string>"
    ],
    "teamId": "<string>"
})


// Allows you to scroll through the user's private tags or a team's tags if `teamId` is supplied. Paging is enabled via a scroll cursor.

@name("List Tags")
POST "https://app.fullcontact.com/api/v1/tags.scroll"
"Content-Type": "application/json"
json({
    "size": "<integer>",
    "scrollCursor": "<string>",
    "includeDeletedTags": "<boolean>",
    "teamId": "<string>"
})


// Creates a tag new private tag or a new team tag if `teamId` is supplied. If the tag already exists, the existing ID will be returned.

@name("Create a Tag")
POST "https://app.fullcontact.com/api/v1/tags.create"
"Content-Type": "application/json"
json({
    "tag": {
        "tagData": {
            "name": "Duis aliqua non incididunt ullamco"
        }
    }
})


// Renames a user's private tag or a team's tag if `teamId` is supplied.

@name("Rename a Tag")
POST "https://app.fullcontact.com/api/v1/tags.update"
"Content-Type": "application/json"
json({
    "tag": {
        "tagId": "n",
        "created": "2006-12-13T05:00:22.134Z",
        "updated": "1951-12-09T12:50:06.992Z",
        "etag": "ad veniam laboris aliquip",
        "tagData": {
            "name": "in dolore in et"
        }
    },
    "teamId": "<string>"
})


// Deletes a private tag or a team tag if `teamId` is supplied

@name("Delete a Tag")
POST "https://app.fullcontact.com/api/v1/tags.delete"
"Content-Type": "application/json"
json({
    "tagId": "<string>",
    "etag": "<string>",
    "teamId": "<string>"
})


// Gets a list of team's that the user is a member of.

@name("List Teams")
POST "https://app.fullcontact.com/api/v1/teams.get"
"Content-Type": "application/json"
data('"<object>"')


// Fetches one or more webhooks that exist for the authorized user or team if `teamId` is supplied.

@name("Get Webhooks by ID")
POST "https://app.fullcontact.com/api/v1/webhooks.get"
"Content-Type": "application/json"
json({
    "webhookIds": [
        "<string>",
        "<string>"
    ],
    "page": "<integer>",
    "teamId": "<string>"
})


// Returns webhooks that match the search criteria for the user or the team if `teamId` is supplied.

@name("Search Webhooks")
POST "https://app.fullcontact.com/api/v1/webhooks.search"
"Content-Type": "application/json"
json({
    "url": "<string>",
    "page": "<integer>",
    "triggerIds": [
        "<string>",
        "<string>"
    ],
    "teamId": "<string>"
})


// Creates a new webhook for the user or for the team if `teamId` is supplied.

@name("Create a Webhook")
POST "https://app.fullcontact.com/api/v1/webhooks.create"
"Content-Type": "application/json"
json({
    "url": "<string>",
    "triggerIds": [
        "<string>",
        "<string>"
    ],
    "teamId": "<string>"
})


// Deletes a webhook for a user or a team if `teamId` is supplied.

@name("Delete a Webhook")
POST "https://app.fullcontact.com/api/v1/webhooks.delete"
"Content-Type": "application/json"
json({
    "webhookId": "<string>",
    "teamId": "<string>"
})


// Returns a list of batches for a webhook by `batchId`. Limited for batches that have happened in the last 14 days.

@name("Get Webhook Batches")
POST "https://app.fullcontact.com/api/v1/webhooks.getBatches"
"Content-Type": "application/json"
json({
    "webhookId": "<string>",
    "batchId": "<string>",
    "teamId": "<string>"
})


// Returns a list of all available triggers that can be used.

@name("Get Available Triggers")
POST "https://app.fullcontact.com/api/v1/webhooks.getTriggers"
"Content-Type": "application/json"
data('"<object>"')



