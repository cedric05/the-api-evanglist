#!/usr/bin/env dothttp

# imported from 35240-c446a4c9-8dd6-45c4-99f2-688a96fe76ae.postman_collection.json

// OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) to use this endpoint, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`.

@name("Check a token")
POST "https://{{baseUrl}}/applications/:client_id/token"
"Content-Type": "application/json"
json({
    "access_token": "<string>"
})


// OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the "token" property in the response because changes take effect immediately. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.

@name("Reset a token")
PATCH "https://{{baseUrl}}/applications/:client_id/token"
"Content-Type": "application/json"
json({
    "access_token": "<string>"
})


// OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.

@name("Delete an app token")
DELETE "https://{{baseUrl}}/applications/:client_id/token"
"Content-Type": "application/json"
json({
    "access_token": "<string>"
})



