#!/usr/bin/env dothttp

# imported from 35240-c446a4c9-8dd6-45c4-99f2-688a96fe76ae.postman_collection.json

// Provides publicly available information about someone with a GitHub account.
// 
// GitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See "[Identifying and authorizing users for GitHub Apps](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)" for details about authentication. For an example response, see "[Response with GitHub plan information](https://developer.github.com/v3/users/#response-with-github-plan-information)."
// 
// The `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://developer.github.com/v3/#authentication).
// 
// The Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see "[Emails API](https://developer.github.com/v3/users/emails/)".

@name("Get a user")
GET "https://{{baseUrl}}/users/:username"


// Lists the people following the specified user.

@name("List followers of a user")
GET "https://{{baseUrl}}/users/:username/followers"
? "per_page"= "30"
? "page"= "1"


// Lists public gists for the specified user:

@name("List gists for a user")
GET "https://{{baseUrl}}/users/:username/gists"
? "since"= "<string>"
? "per_page"= "30"
? "page"= "1"


// Lists the GPG keys for a user. This information is accessible by anyone.

@name("List GPG keys for a user")
GET "https://{{baseUrl}}/users/:username/gpg_keys"
? "per_page"= "30"
? "page"= "1"


// Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.
// 
// The `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:
// 
// ```shell
//  curl -u username:token
//   https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192
// ```

@name("Get contextual information for a user")
GET "https://{{baseUrl}}/users/:username/hovercard"
? "subject_type"= "<string>"
? "subject_id"= "<string>"


// Enables an authenticated GitHub App to find the user’s installation information.
// 
// You must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.

@name("Get a user installation for the authenticated app")
GET "https://{{baseUrl}}/users/:username/installation"


// Lists the _verified_ public SSH keys for a user. This is accessible by anyone.

@name("List public keys for a user")
GET "https://{{baseUrl}}/users/:username/keys"
? "per_page"= "30"
? "page"= "1"


// List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.
// 
// This method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://developer.github.com/v3/orgs/#list-organizations-for-the-authenticated-user) API instead.

@name("List organizations for a user")
GET "https://{{baseUrl}}/users/:username/orgs"
? "per_page"= "30"
? "page"= "1"


@name("List user projects")
GET "https://{{baseUrl}}/users/:username/projects"
? "state"= "open"
? "per_page"= "30"
? "page"= "1"


// Lists public repositories for the specified user.

@name("List repositories for a user")
GET "https://{{baseUrl}}/users/:username/repos"
? "type"= "owner"
? "sort"= "full_name"
? "direction"= "<string>"
? "per_page"= "30"
? "page"= "1"


// Lists repositories a user has starred.
// 
// You can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:

@name("List repositories starred by a user")
GET "https://{{baseUrl}}/users/:username/starred"
? "sort"= "created"
? "direction"= "desc"
? "per_page"= "30"
? "page"= "1"


// Lists repositories a user is watching.

@name("List repositories watched by a user")
GET "https://{{baseUrl}}/users/:username/subscriptions"
? "per_page"= "30"
? "page"= "1"



