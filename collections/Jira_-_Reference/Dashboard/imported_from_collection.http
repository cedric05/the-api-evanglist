#!/usr/bin/env dothttp

# imported from 35240-cc40b3de-1093-44e1-94c4-498c2fe3c9bb.postman_collection.json

// base-inherit-auth

@name("base-inherit-auth")
GET "https://"
basicauth("{{atlassian_email}}", "{{atlassian_token}}")


// Returns a list of dashboards owned by or shared with the user. The list may be filtered to include only favorite or owned dashboards.
// 
// This operation can be accessed anonymously.
// 
// **[Permissions](#permissions) required:** None.

@name("Get All Dashboards") : "base-inherit-auth"
GET "https://{{baseUrl}}/rest/api/3/dashboard"
? "filter"= "<string>"
? "startAt"= "0"
? "maxResults"= "20"


// Creates a dashboard.
// 
// **[Permissions](#permissions) required:** None.

@name("Create Dashboard") : "base-inherit-auth"
POST "https://{{baseUrl}}/rest/api/3/dashboard"
"Content-Type": "application/json"
json({
    "name": "<string>",
    "sharePermissions": [
        {
            "type": "<string>",
            "project": {
                "id": "<string>",
                "email": "<string>",
                "favourite": "<boolean>"
            },
            "role": {
                "name": "<string>",
                "translatedName": "<string>",
                "currentUserRole": "<boolean>"
            },
            "group": {
                "name": "<string>"
            }
        },
        {
            "type": "<string>",
            "project": {
                "id": "<string>",
                "email": "<string>",
                "favourite": "<boolean>"
            },
            "role": {
                "name": "<string>",
                "translatedName": "<string>",
                "currentUserRole": "<boolean>"
            },
            "group": {
                "name": "<string>"
            }
        }
    ],
    "description": "<string>"
})


// Returns a [paginated](#pagination) list of dashboards. This operation is similar to [Get dashboards](#api-rest-api-3-dashboard-get) except that the results can be refined to include dashboards that have specific attributes. For example, dashboards with a particular name. When multiple attributes are specified only filters matching all attributes are returned.
// 
// This operation can be accessed anonymously.
// 
// **[Permissions](#permissions) required:** The following dashboards that match the query parameters are returned:
// 
//  *  Dashboards owned by the user. Not returned for anonymous users.
//  *  Dashboards shared with a group that the user is a member of. Not returned for anonymous users.
//  *  Dashboards shared with a private project that the user can browse. Not returned for anonymous users.
//  *  Dashboards shared with a public project.
//  *  Dashboards shared with the public.

@name("Search For Dashboards") : "base-inherit-auth"
GET "https://{{baseUrl}}/rest/api/3/dashboard/search"
? "dashboardName"= "<string>"
? "accountId"= "<string>"
? "owner"= "<string>"
? "groupname"= "<string>"
? "projectId"= "<long>"
? "orderBy"= "name"
? "startAt"= "0"
? "maxResults"= "50"
? "expand"= "<string>"


// Returns the key and value of a dashboard item property.
// 
// A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).
// 
// When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.
// 
// There is no resource to set or get dashboard items.
// 
// This operation can be accessed anonymously.
// 
// **[Permissions](#permissions) required:** The user must be the owner of the dashboard or be shared the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users.

@name("Get Dashboard Item Property") : "base-inherit-auth"
GET "https://{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey"


// Sets the value of a dashboard item property. Use this resource in apps to store custom data against a dashboard item.
// 
// A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).
// 
// When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.
// 
// There is no resource to set or get dashboard items.
// 
// The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
// 
// This operation can be accessed anonymously.
// 
// **[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard.

@name("Set Dashboard Item Property") : "base-inherit-auth"
PUT "https://{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey"
"Content-Type": "application/json"



// Deletes a dashboard item property.
// 
// This operation can be accessed anonymously.
// 
// **[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard.

@name("Delete Dashboard Item Property") : "base-inherit-auth"
DELETE "https://{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties/:propertyKey"


// Returns the keys of all properties for a dashboard item.
// 
// This operation can be accessed anonymously.
// 
// **[Permissions](#permissions) required:** The user must be the owner of the dashboard or be shared the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users.

@name("Get Dashboard Item Property Keys") : "base-inherit-auth"
GET "https://{{baseUrl}}/rest/api/3/dashboard/:dashboardId/items/:itemId/properties"


// Returns a dashboard.
// 
// This operation can be accessed anonymously.
// 
// **[Permissions](#permissions) required:** None.
// 
// However, to get a dashboard, the dashboard must be shared with the user or the user must own it. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users.

@name("Get Dashboard") : "base-inherit-auth"
GET "https://{{baseUrl}}/rest/api/3/dashboard/:id"


// Updates a dashboard, replacing all the dashboard details with those provided.
// 
// **[Permissions](#permissions) required:** None
// 
// The dashboard to be updated must be owned by the user.

@name("Update Dashboard") : "base-inherit-auth"
PUT "https://{{baseUrl}}/rest/api/3/dashboard/:id"
"Content-Type": "application/json"
json({
    "name": "<string>",
    "sharePermissions": [
        {
            "type": "<string>",
            "project": {
                "id": "<string>",
                "email": "<string>",
                "favourite": "<boolean>"
            },
            "role": {
                "name": "<string>",
                "translatedName": "<string>",
                "currentUserRole": "<boolean>"
            },
            "group": {
                "name": "<string>"
            }
        },
        {
            "type": "<string>",
            "project": {
                "id": "<string>",
                "email": "<string>",
                "favourite": "<boolean>"
            },
            "role": {
                "name": "<string>",
                "translatedName": "<string>",
                "currentUserRole": "<boolean>"
            },
            "group": {
                "name": "<string>"
            }
        }
    ],
    "description": "<string>"
})


// Deletes a dashboard.
// 
// **[Permissions](#permissions) required:** None
// 
// The dashboard to be deleted must be owned by the user.

@name("Delete Dashboard") : "base-inherit-auth"
DELETE "https://{{baseUrl}}/rest/api/3/dashboard/:id"


// Copies a dashboard. Any values provided in the `dashboard` parameter replace those in the copied dashboard.
// 
// **[Permissions](#permissions) required:** None
// 
// The dashboard to be copied must be owned by or shared with the user.

@name("Copy Dashboard") : "base-inherit-auth"
POST "https://{{baseUrl}}/rest/api/3/dashboard/:id/copy"
"Content-Type": "application/json"
json({
    "name": "<string>",
    "sharePermissions": [
        {
            "type": "<string>",
            "project": {
                "id": "<string>",
                "email": "<string>",
                "favourite": "<boolean>"
            },
            "role": {
                "name": "<string>",
                "translatedName": "<string>",
                "currentUserRole": "<boolean>"
            },
            "group": {
                "name": "<string>"
            }
        },
        {
            "type": "<string>",
            "project": {
                "id": "<string>",
                "email": "<string>",
                "favourite": "<boolean>"
            },
            "role": {
                "name": "<string>",
                "translatedName": "<string>",
                "currentUserRole": "<boolean>"
            },
            "group": {
                "name": "<string>"
            }
        }
    ],
    "description": "<string>"
})



