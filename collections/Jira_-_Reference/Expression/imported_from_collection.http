#!/usr/bin/env dothttp

# imported from 35240-cc40b3de-1093-44e1-94c4-498c2fe3c9bb.postman_collection.json

// base-inherit-auth

@name("base-inherit-auth")
GET "https://"
basicauth("{{atlassian_email}}", "{{atlassian_token}}")


// Analyses and validates Jira expressions.
// 
// As an experimental feature, this operation can also attempt to type-check the expressions.
// 
// Learn more about Jira expressions in the [documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/).
// 
// **[Permissions](#permissions) required**: None.

@name("Analyse Jira Expression") : "base-inherit-auth"
POST "https://{{baseUrl}}/rest/api/3/expression/analyse"
"Content-Type": "application/json"
? "check"= "syntax"
json({
    "expressions": [
        "<string>",
        "<string>"
    ],
    "contextVariables": "<object>"
})


// Evaluates a Jira expression and returns its value.
// 
// This resource can be used to test Jira expressions that you plan to use elsewhere, or to fetch data in a flexible way. Consult the [Jira expressions documentation](https://developer.atlassian.com/cloud/jira/platform/jira-expressions/) for more details.
// 
// #### Context variables ####
// 
// The following context variables are available to Jira expressions evaluated by this resource. Their presence depends on various factors; usually you need to manually request them in the context object sent in the payload, but some of them are added automatically under certain conditions.
// 
//  *  `user` ([User](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#user)): The current user. Always available and equal to `null` if the request is anonymous.
//  *  `app` ([App](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#app)): The Connect app that made the request. Available only for authenticated requests made by Connect Apps (read more here: [Authentication for Connect apps](https://developer.atlassian.com/cloud/jira/platform/security-for-connect-apps/)).
//  *  `issue` ([Issue](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)): The current issue. Available only when the issue is provided in the request context object.
//  *  `issues` ([List](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#list) of [Issues](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#issue)): A collection of issues matching a JQL query. Available only when JQL is provided in the request context object.
//  *  `project` ([Project](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#project)): The current project. Available only when the project is provided in the request context object.
//  *  `sprint` ([Sprint](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#sprint)): The current sprint. Available only when the sprint is provided in the request context object.
//  *  `board` ([Board](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#board)): The current board. Available only when the board is provided in the request context object.
//  *  `serviceDesk` ([ServiceDesk](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#servicedesk)): The current service desk. Available only when the service desk is provided in the request context object.
//  *  `customerRequest` ([CustomerRequest](https://developer.atlassian.com/cloud/jira/platform/jira-expressions-type-reference#customerrequest)): The current customer request. Available only when the customer request is provided in the request context object.
// 
// This operation can be accessed anonymously.
// 
// **[Permissions](#permissions) required**: None. However, an expression may return different results for different users depending on their permissions. For example, different users may see different comments on the same issue.  
// Permission to access Jira Software is required to access Jira Software context variables (`board` and `sprint`) or fields (for example, `issue.sprint`).

@name("Evaluate Jira Expression") : "base-inherit-auth"
POST "https://{{baseUrl}}/rest/api/3/expression/eval"
"Content-Type": "application/json"
? "expand"= "<string>"
json({
    "expression": "<string>",
    "context": {
        "issue": {
            "id": "<long>",
            "key": "<string>"
        },
        "issues": {
            "jql": {
                "query": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                "startAt": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                "maxResults": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                },
                "validation": {
                    "value": "<Error: Too many levels of nesting to fake this schema>"
                }
            }
        },
        "project": {
            "id": "<long>",
            "key": "<string>"
        },
        "sprint": "<long>",
        "board": "<long>",
        "serviceDesk": "<long>",
        "customerRequest": "<long>"
    }
})



