#!/usr/bin/env dothttp

# imported from 35240-438c1bb3-fd17-4abc-9513-4f1edde0dc3d.postman_collection.json

// Generic add entry, should be used when the uploaded entry type is not known.

@name("Get Service Baseentry Action Add")
GET "https://{{baseUrl}}/service/baseentry/action/add"
? "entry[name]"= "<>"
? "entry[description]"= "<>"
? "entry[userId]"= "<>"
? "entry[creatorId]"= "<>"
? "entry[tags]"= "<>"
? "entry[adminTags]"= "<>"
? "entry[categories]"= "<>"
? "entry[categoriesIds]"= "<>"
? "entry[type]"= "<>"
? "entry[groupId]"= "<>"
? "entry[partnerData]"= "<>"
? "entry[licenseType]"= "<>"
? "entry[accessControlId]"= "<>"
? "entry[startDate]"= "<>"
? "entry[endDate]"= "<>"
? "entry[referenceId]"= "<>"
? "entry[partnerSortValue]"= "<>"
? "entry[conversionProfileId]"= "<>"
? "entry[redirectEntryId]"= "<>"
? "entry[parentEntryId]"= "<>"
? "entry[operationAttributes]"= "<>"
? "entry[entitledUsersEdit]"= "<>"
? "entry[entitledUsersPublish]"= "<>"
? "entry[templateEntryId]"= "<>"
? "entry[displayInSearch]"= "<>"
? "entry[objectType]"= "<>"
? "entry[dataContent]"= "<>"
? "entry[retrieveDataContentByGet]"= "<>"
? "entry[documentType]"= "<>"
? "entry[msDuration]"= "<>"
? "entry[playlistContent]"= "<>"
? "entry[filters]"= "<>"
? "entry[totalResults]"= "<>"
? "entry[playlistType]"= "<>"
? "entry[mediaType]"= "<>"
? "entry[conversionQuality]"= "<>"
? "entry[sourceType]"= "<>"
? "entry[searchProviderType]"= "<>"
? "entry[searchProviderId]"= "<>"
? "entry[creditUserName]"= "<>"
? "entry[creditUrl]"= "<>"
? "entry[streams]"= "<>"
? "entry[editorType]"= "<>"
? "entry[externalSourceType]"= "<>"
? "entry[offlineMessage]"= "<>"
? "entry[recordStatus]"= "<>"
? "entry[dvrStatus]"= "<>"
? "entry[dvrWindow]"= "<>"
? "entry[lastElapsedRecordingTime]"= "<>"
? "entry[liveStreamConfigurations]"= "<>"
? "entry[recordedEntryId]"= "<>"
? "entry[pushPublishEnabled]"= "<>"
? "entry[publishConfigurations]"= "<>"
? "entry[currentBroadcastStartTime]"= "<>"
? "entry[recordingOptions][shouldCopyEntitlement]"= "<>"
? "entry[recordingOptions][shouldCopyScheduling]"= "<>"
? "entry[recordingOptions][shouldCopyThumbnail]"= "<>"
? "entry[recordingOptions][shouldMakeHidden]"= "<>"
? "entry[playlistId]"= "<>"
? "entry[repeat]"= "<>"
? "entry[bitrates]"= "<>"
? "entry[primaryBroadcastingUrl]"= "<>"
? "entry[secondaryBroadcastingUrl]"= "<>"
? "entry[primaryRtspBroadcastingUrl]"= "<>"
? "entry[secondaryRtspBroadcastingUrl]"= "<>"
? "entry[streamName]"= "<>"
? "entry[streamUrl]"= "<>"
? "entry[hlsStreamUrl]"= "<>"
? "entry[urlManager]"= "<>"
? "entry[encodingIP1]"= "<>"
? "entry[encodingIP2]"= "<>"
? "entry[streamPassword]"= "<>"
? "type"= "<>"


// Attach content resource to entry in status NO_MEDIA

@name("Post Service Baseentry Action Addcontent")
POST "https://{{baseUrl}}/service/baseentry/action/addContent"
? "entryId"= "<>"
? "resource[objectType]"= "<>"
? "resource[resource][objectType]"= "<>"
? "resource[resource][url]"= "<>"
? "resource[resource][forceAsyncDownload]"= "<>"
? "resource[resource][assetId]"= "<>"
? "resource[resource][entryId]"= "<>"
? "resource[resource][flavorParamsId]"= "<>"
? "resource[resource][fileSyncObjectType]"= "<>"
? "resource[resource][objectSubType]"= "<>"
? "resource[resource][objectId]"= "<>"
? "resource[resource][version]"= "<>"
? "resource[resource][resource][objectType]"= "<>"
? "resource[resource][resource][url]"= "<>"
? "resource[resource][resource][forceAsyncDownload]"= "<>"
? "resource[resource][resource][assetId]"= "<>"
? "resource[resource][resource][entryId]"= "<>"
? "resource[resource][resource][flavorParamsId]"= "<>"
? "resource[resource][resource][fileSyncObjectType]"= "<>"
? "resource[resource][resource][objectSubType]"= "<>"
? "resource[resource][resource][objectId]"= "<>"
? "resource[resource][resource][version]"= "<>"
? "resource[resource][resource][resource][objectType]"= "<>"
? "resource[resource][resource][resource][url]"= "<>"
? "resource[resource][resource][resource][forceAsyncDownload]"= "<>"
? "resource[resource][resource][resource][assetId]"= "<>"
? "resource[resource][resource][resource][entryId]"= "<>"
? "resource[resource][resource][resource][flavorParamsId]"= "<>"
? "resource[resource][resource][resource][fileSyncObjectType]"= "<>"
? "resource[resource][resource][resource][objectSubType]"= "<>"
? "resource[resource][resource][resource][objectId]"= "<>"
? "resource[resource][resource][resource][version]"= "<>"
? "resource[resource][resource][resource][resources]"= "<>"
? "resource[resource][resource][resource][content]"= "<>"
? "resource[resource][resource][resource][storageProfileId]"= "<>"
? "resource[resource][resource][resource][privateKey]"= "<>"
? "resource[resource][resource][resource][publicKey]"= "<>"
? "resource[resource][resource][resource][keyPassphrase]"= "<>"
? "resource[resource][resource][resource][dropFolderFileId]"= "<>"
? "resource[resource][resource][resource][localFilePath]"= "<>"
? "resource[resource][resource][resource][keepOriginalFile]"= "<>"
? "resource[resource][resource][resource][token]"= "<>"
? "resource[resource][resource][resources]"= "<>"
? "resource[resource][resource][content]"= "<>"
? "resource[resource][resource][storageProfileId]"= "<>"
? "resource[resource][resource][privateKey]"= "<>"
? "resource[resource][resource][publicKey]"= "<>"
? "resource[resource][resource][keyPassphrase]"= "<>"
? "resource[resource][resource][dropFolderFileId]"= "<>"
? "resource[resource][resource][localFilePath]"= "<>"
? "resource[resource][resource][keepOriginalFile]"= "<>"
? "resource[resource][resource][token]"= "<>"
? "resource[resource][resources]"= "<>"
? "resource[resource][content]"= "<>"
? "resource[resource][storageProfileId]"= "<>"
? "resource[resource][privateKey]"= "<>"
? "resource[resource][publicKey]"= "<>"
? "resource[resource][keyPassphrase]"= "<>"
? "resource[resource][dropFolderFileId]"= "<>"
? "resource[resource][localFilePath]"= "<>"
? "resource[resource][keepOriginalFile]"= "<>"
? "resource[resource][token]"= "<>"
? "resource[resources]"= "<>"
? "resource[url]"= "<>"
? "resource[forceAsyncDownload]"= "<>"
? "resource[assetId]"= "<>"
? "resource[entryId]"= "<>"
? "resource[flavorParamsId]"= "<>"
? "resource[fileSyncObjectType]"= "<>"
? "resource[objectSubType]"= "<>"
? "resource[objectId]"= "<>"
? "resource[version]"= "<>"
? "resource[content]"= "<>"
? "resource[storageProfileId]"= "<>"
? "resource[privateKey]"= "<>"
? "resource[publicKey]"= "<>"
? "resource[keyPassphrase]"= "<>"
? "resource[dropFolderFileId]"= "<>"
? "resource[localFilePath]"= "<>"
? "resource[keepOriginalFile]"= "<>"
? "resource[token]"= "<>"


// Generic add entry using an uploaded file, should be used when the uploaded entry type is not known.

@name("Get Service Baseentry Action Addfromuploadedfile")
GET "https://{{baseUrl}}/service/baseentry/action/addFromUploadedFile"
? "entry[name]"= "<>"
? "entry[description]"= "<>"
? "entry[userId]"= "<>"
? "entry[creatorId]"= "<>"
? "entry[tags]"= "<>"
? "entry[adminTags]"= "<>"
? "entry[categories]"= "<>"
? "entry[categoriesIds]"= "<>"
? "entry[type]"= "<>"
? "entry[groupId]"= "<>"
? "entry[partnerData]"= "<>"
? "entry[licenseType]"= "<>"
? "entry[accessControlId]"= "<>"
? "entry[startDate]"= "<>"
? "entry[endDate]"= "<>"
? "entry[referenceId]"= "<>"
? "entry[partnerSortValue]"= "<>"
? "entry[conversionProfileId]"= "<>"
? "entry[redirectEntryId]"= "<>"
? "entry[parentEntryId]"= "<>"
? "entry[operationAttributes]"= "<>"
? "entry[entitledUsersEdit]"= "<>"
? "entry[entitledUsersPublish]"= "<>"
? "entry[templateEntryId]"= "<>"
? "entry[displayInSearch]"= "<>"
? "entry[objectType]"= "<>"
? "entry[dataContent]"= "<>"
? "entry[retrieveDataContentByGet]"= "<>"
? "entry[documentType]"= "<>"
? "entry[msDuration]"= "<>"
? "entry[playlistContent]"= "<>"
? "entry[filters]"= "<>"
? "entry[totalResults]"= "<>"
? "entry[playlistType]"= "<>"
? "entry[mediaType]"= "<>"
? "entry[conversionQuality]"= "<>"
? "entry[sourceType]"= "<>"
? "entry[searchProviderType]"= "<>"
? "entry[searchProviderId]"= "<>"
? "entry[creditUserName]"= "<>"
? "entry[creditUrl]"= "<>"
? "entry[streams]"= "<>"
? "entry[editorType]"= "<>"
? "entry[externalSourceType]"= "<>"
? "entry[offlineMessage]"= "<>"
? "entry[recordStatus]"= "<>"
? "entry[dvrStatus]"= "<>"
? "entry[dvrWindow]"= "<>"
? "entry[lastElapsedRecordingTime]"= "<>"
? "entry[liveStreamConfigurations]"= "<>"
? "entry[recordedEntryId]"= "<>"
? "entry[pushPublishEnabled]"= "<>"
? "entry[publishConfigurations]"= "<>"
? "entry[currentBroadcastStartTime]"= "<>"
? "entry[recordingOptions][shouldCopyEntitlement]"= "<>"
? "entry[recordingOptions][shouldCopyScheduling]"= "<>"
? "entry[recordingOptions][shouldCopyThumbnail]"= "<>"
? "entry[recordingOptions][shouldMakeHidden]"= "<>"
? "entry[playlistId]"= "<>"
? "entry[repeat]"= "<>"
? "entry[bitrates]"= "<>"
? "entry[primaryBroadcastingUrl]"= "<>"
? "entry[secondaryBroadcastingUrl]"= "<>"
? "entry[primaryRtspBroadcastingUrl]"= "<>"
? "entry[secondaryRtspBroadcastingUrl]"= "<>"
? "entry[streamName]"= "<>"
? "entry[streamUrl]"= "<>"
? "entry[hlsStreamUrl]"= "<>"
? "entry[urlManager]"= "<>"
? "entry[encodingIP1]"= "<>"
? "entry[encodingIP2]"= "<>"
? "entry[streamPassword]"= "<>"
? "uploadTokenId"= "<>"
? "type"= "<>"


// Anonymously rank an entry, no validation is done on duplicate rankings.

@name("Get Service Baseentry Action Anonymousrank")
GET "https://{{baseUrl}}/service/baseentry/action/anonymousRank"
? "entryId"= "<>"
? "rank"= "<>"


// Approve the entry and mark the pending flags (if any) as moderated (this will make the entry playable).

@name("Get Service Baseentry Action Approve")
GET "https://{{baseUrl}}/service/baseentry/action/approve"
? "entryId"= "<>"


// Clone an entry with optional attributes to apply to the clone

@name("Get Service Baseentry Action Clone")
GET "https://{{baseUrl}}/service/baseentry/action/clone"
? "entryId"= "<>"


// Count base entries by filter.

@name("Get Service Baseentry Action Count")
GET "https://{{baseUrl}}/service/baseentry/action/count"
? "filter[orderBy]"= "<>"
? "filter[advancedSearch][objectType]"= "<>"
? "filter[advancedSearch][value]"= "<>"
? "filter[advancedSearch][categoriesMatchOr]"= "<>"
? "filter[advancedSearch][categoryEntryStatusIn]"= "<>"
? "filter[advancedSearch][orderBy]"= "<>"
? "filter[advancedSearch][categoryIdEqual]"= "<>"
? "filter[advancedSearch][memberIdEq]"= "<>"
? "filter[advancedSearch][memberIdIn]"= "<>"
? "filter[advancedSearch][memberPermissionsMatchOr]"= "<>"
? "filter[advancedSearch][memberPermissionsMatchAnd]"= "<>"
? "filter[advancedSearch][noDistributionProfiles]"= "<>"
? "filter[advancedSearch][distributionProfileId]"= "<>"
? "filter[advancedSearch][distributionSunStatus]"= "<>"
? "filter[advancedSearch][entryDistributionFlag]"= "<>"
? "filter[advancedSearch][entryDistributionStatus]"= "<>"
? "filter[advancedSearch][hasEntryDistributionValidationErrors]"= "<>"
? "filter[advancedSearch][entryDistributionValidationErrors]"= "<>"
? "filter[advancedSearch][contentLike]"= "<>"
? "filter[advancedSearch][contentMultiLikeOr]"= "<>"
? "filter[advancedSearch][contentMultiLikeAnd]"= "<>"
? "filter[advancedSearch][cuePointsFreeText]"= "<>"
? "filter[advancedSearch][cuePointTypeIn]"= "<>"
? "filter[advancedSearch][cuePointSubTypeEqual]"= "<>"
? "filter[advancedSearch][watermarkId]"= "<>"
? "filter[advancedSearch][indexIdGreaterThan]"= "<>"
? "filter[advancedSearch][depthGreaterThanEqual]"= "<>"
? "filter[advancedSearch][isQuiz]"= "<>"
? "filter[advancedSearch][field]"= "<>"
? "filter[advancedSearch][type]"= "<>"
? "filter[advancedSearch][items]"= "<>"
? "filter[advancedSearch][idEqual]"= "<>"
? "filter[advancedSearch][idIn]"= "<>"
? "filter[advancedSearch][userIdEqual]"= "<>"
? "filter[advancedSearch][userIdIn]"= "<>"
? "filter[advancedSearch][updatedAtGreaterThanOrEqual]"= "<>"
? "filter[advancedSearch][updatedAtLessThanOrEqual]"= "<>"
? "filter[advancedSearch][extendedStatusEqual]"= "<>"
? "filter[advancedSearch][extendedStatusIn]"= "<>"
? "filter[advancedSearch][comparison]"= "<>"
? "filter[advancedSearch][not]"= "<>"
? "filter[advancedSearch][attribute]"= "<>"
? "filter[advancedSearch][metadataProfileId]"= "<>"
? "filter[idEqual]"= "<>"
? "filter[idIn]"= "<>"
? "filter[idNotIn]"= "<>"
? "filter[nameLike]"= "<>"
? "filter[nameMultiLikeOr]"= "<>"
? "filter[nameMultiLikeAnd]"= "<>"
? "filter[nameEqual]"= "<>"
? "filter[partnerIdEqual]"= "<>"
? "filter[partnerIdIn]"= "<>"
? "filter[userIdEqual]"= "<>"
? "filter[userIdIn]"= "<>"
? "filter[userIdNotIn]"= "<>"
? "filter[creatorIdEqual]"= "<>"
? "filter[tagsLike]"= "<>"
? "filter[tagsMultiLikeOr]"= "<>"
? "filter[tagsMultiLikeAnd]"= "<>"
? "filter[adminTagsLike]"= "<>"
? "filter[adminTagsMultiLikeOr]"= "<>"
? "filter[adminTagsMultiLikeAnd]"= "<>"
? "filter[categoriesMatchAnd]"= "<>"
? "filter[categoriesMatchOr]"= "<>"
? "filter[categoriesNotContains]"= "<>"
? "filter[categoriesIdsMatchAnd]"= "<>"
? "filter[categoriesIdsMatchOr]"= "<>"
? "filter[categoriesIdsNotContains]"= "<>"
? "filter[categoriesIdsEmpty]"= "<>"
? "filter[statusEqual]"= "<>"
? "filter[statusNotEqual]"= "<>"
? "filter[statusIn]"= "<>"
? "filter[statusNotIn]"= "<>"
? "filter[moderationStatusEqual]"= "<>"
? "filter[moderationStatusNotEqual]"= "<>"
? "filter[moderationStatusIn]"= "<>"
? "filter[moderationStatusNotIn]"= "<>"
? "filter[typeEqual]"= "<>"
? "filter[typeIn]"= "<>"
? "filter[createdAtGreaterThanOrEqual]"= "<>"
? "filter[createdAtLessThanOrEqual]"= "<>"
? "filter[updatedAtGreaterThanOrEqual]"= "<>"
? "filter[updatedAtLessThanOrEqual]"= "<>"
? "filter[totalRankLessThanOrEqual]"= "<>"
? "filter[totalRankGreaterThanOrEqual]"= "<>"
? "filter[groupIdEqual]"= "<>"
? "filter[searchTextMatchAnd]"= "<>"
? "filter[searchTextMatchOr]"= "<>"
? "filter[accessControlIdEqual]"= "<>"
? "filter[accessControlIdIn]"= "<>"
? "filter[startDateGreaterThanOrEqual]"= "<>"
? "filter[startDateLessThanOrEqual]"= "<>"
? "filter[startDateGreaterThanOrEqualOrNull]"= "<>"
? "filter[startDateLessThanOrEqualOrNull]"= "<>"
? "filter[endDateGreaterThanOrEqual]"= "<>"
? "filter[endDateLessThanOrEqual]"= "<>"
? "filter[endDateGreaterThanOrEqualOrNull]"= "<>"
? "filter[endDateLessThanOrEqualOrNull]"= "<>"
? "filter[referenceIdEqual]"= "<>"
? "filter[referenceIdIn]"= "<>"
? "filter[replacingEntryIdEqual]"= "<>"
? "filter[replacingEntryIdIn]"= "<>"
? "filter[replacedEntryIdEqual]"= "<>"
? "filter[replacedEntryIdIn]"= "<>"
? "filter[replacementStatusEqual]"= "<>"
? "filter[replacementStatusIn]"= "<>"
? "filter[partnerSortValueGreaterThanOrEqual]"= "<>"
? "filter[partnerSortValueLessThanOrEqual]"= "<>"
? "filter[rootEntryIdEqual]"= "<>"
? "filter[rootEntryIdIn]"= "<>"
? "filter[parentEntryIdEqual]"= "<>"
? "filter[entitledUsersEditMatchAnd]"= "<>"
? "filter[entitledUsersEditMatchOr]"= "<>"
? "filter[entitledUsersPublishMatchAnd]"= "<>"
? "filter[entitledUsersPublishMatchOr]"= "<>"
? "filter[tagsNameMultiLikeOr]"= "<>"
? "filter[tagsAdminTagsMultiLikeOr]"= "<>"
? "filter[tagsAdminTagsNameMultiLikeOr]"= "<>"
? "filter[tagsNameMultiLikeAnd]"= "<>"
? "filter[tagsAdminTagsMultiLikeAnd]"= "<>"
? "filter[tagsAdminTagsNameMultiLikeAnd]"= "<>"
? "filter[freeText]"= "<>"
? "filter[isRoot]"= "<>"
? "filter[categoriesFullNameIn]"= "<>"
? "filter[categoryAncestorIdIn]"= "<>"
? "filter[redirectFromEntryId]"= "<>"
? "filter[objectType]"= "<>"
? "filter[lastPlayedAtGreaterThanOrEqual]"= "<>"
? "filter[lastPlayedAtLessThanOrEqual]"= "<>"
? "filter[durationLessThan]"= "<>"
? "filter[durationGreaterThan]"= "<>"
? "filter[durationLessThanOrEqual]"= "<>"
? "filter[durationGreaterThanOrEqual]"= "<>"
? "filter[durationTypeMatchOr]"= "<>"
? "filter[documentTypeEqual]"= "<>"
? "filter[documentTypeIn]"= "<>"
? "filter[assetParamsIdsMatchOr]"= "<>"
? "filter[assetParamsIdsMatchAnd]"= "<>"
? "filter[mediaTypeEqual]"= "<>"
? "filter[mediaTypeIn]"= "<>"
? "filter[sourceTypeEqual]"= "<>"
? "filter[sourceTypeNotEqual]"= "<>"
? "filter[sourceTypeIn]"= "<>"
? "filter[sourceTypeNotIn]"= "<>"
? "filter[mediaDateGreaterThanOrEqual]"= "<>"
? "filter[mediaDateLessThanOrEqual]"= "<>"
? "filter[flavorParamsIdsMatchOr]"= "<>"
? "filter[flavorParamsIdsMatchAnd]"= "<>"
? "filter[limit]"= "<>"
? "filter[externalSourceTypeEqual]"= "<>"
? "filter[externalSourceTypeIn]"= "<>"
? "filter[isLive]"= "<>"
? "filter[isRecordedEntryIdEmpty]"= "<>"
? "filter[hasMediaServerHostname]"= "<>"


// Delete an entry.

@name("Get Service Baseentry Action Delete")
GET "https://{{baseUrl}}/service/baseentry/action/delete"
? "entryId"= "<>"


@name("Get Service Baseentry Action Export")
GET "https://{{baseUrl}}/service/baseentry/action/export"
? "entryId"= "<>"
? "storageProfileId"= "<>"


// Flag inappropriate entry for moderation.

@name("Get Service Baseentry Action Flag")
GET "https://{{baseUrl}}/service/baseentry/action/flag"
? "moderationFlag[flaggedEntryId]"= "<>"
? "moderationFlag[flaggedUserId]"= "<>"
? "moderationFlag[comments]"= "<>"
? "moderationFlag[flagType]"= "<>"


// Get base entry by ID.

@name("Get Service Baseentry Action Get")
GET "https://{{baseUrl}}/service/baseentry/action/get"
? "entryId"= "<>"
? "version"= "<>"


// Get an array of KalturaBaseEntry objects by a comma-separated list of ids.

@name("Get Service Baseentry Action Getbyids")
GET "https://{{baseUrl}}/service/baseentry/action/getByIds"
? "entryIds"= "<>"


// This action delivers entry-related data, based on the user's context: access control, restriction, playback format and storage information.

@name("Get Service Baseentry Action Getcontextdata")
GET "https://{{baseUrl}}/service/baseentry/action/getContextData"
? "entryId"= "<>"
? "contextDataParams[referrer]"= "<>"
? "contextDataParams[ip]"= "<>"
? "contextDataParams[ks]"= "<>"
? "contextDataParams[userAgent]"= "<>"
? "contextDataParams[time]"= "<>"
? "contextDataParams[contexts]"= "<>"
? "contextDataParams[hashes]"= "<>"
? "contextDataParams[flavorAssetId]"= "<>"
? "contextDataParams[flavorTags]"= "<>"
? "contextDataParams[streamerType]"= "<>"
? "contextDataParams[mediaProtocol]"= "<>"
? "contextDataParams[objectType]"= "<>"


// This action delivers all data relevant for player

@name("Get Service Baseentry Action Getplaybackcontext")
GET "https://{{baseUrl}}/service/baseentry/action/getPlaybackContext"
? "entryId"= "<>"
? "contextDataParams[referrer]"= "<>"
? "contextDataParams[ip]"= "<>"
? "contextDataParams[ks]"= "<>"
? "contextDataParams[userAgent]"= "<>"
? "contextDataParams[time]"= "<>"
? "contextDataParams[contexts]"= "<>"
? "contextDataParams[hashes]"= "<>"
? "contextDataParams[flavorAssetId]"= "<>"
? "contextDataParams[flavorTags]"= "<>"
? "contextDataParams[streamerType]"= "<>"
? "contextDataParams[mediaProtocol]"= "<>"


// Get remote storage existing paths for the asset.

@name("Get Service Baseentry Action Getremotepaths")
GET "https://{{baseUrl}}/service/baseentry/action/getRemotePaths"
? "entryId"= "<>"


// Index an entry by id.

@name("Get Service Baseentry Action Index")
GET "https://{{baseUrl}}/service/baseentry/action/index"
? "id"= "<>"
? "shouldUpdate"= "<>"


// List base entries by filter with paging support.

@name("Get Service Baseentry Action List")
GET "https://{{baseUrl}}/service/baseentry/action/list"
? "filter[orderBy]"= "<>"
? "filter[advancedSearch][objectType]"= "<>"
? "filter[advancedSearch][value]"= "<>"
? "filter[advancedSearch][categoriesMatchOr]"= "<>"
? "filter[advancedSearch][categoryEntryStatusIn]"= "<>"
? "filter[advancedSearch][orderBy]"= "<>"
? "filter[advancedSearch][categoryIdEqual]"= "<>"
? "filter[advancedSearch][memberIdEq]"= "<>"
? "filter[advancedSearch][memberIdIn]"= "<>"
? "filter[advancedSearch][memberPermissionsMatchOr]"= "<>"
? "filter[advancedSearch][memberPermissionsMatchAnd]"= "<>"
? "filter[advancedSearch][noDistributionProfiles]"= "<>"
? "filter[advancedSearch][distributionProfileId]"= "<>"
? "filter[advancedSearch][distributionSunStatus]"= "<>"
? "filter[advancedSearch][entryDistributionFlag]"= "<>"
? "filter[advancedSearch][entryDistributionStatus]"= "<>"
? "filter[advancedSearch][hasEntryDistributionValidationErrors]"= "<>"
? "filter[advancedSearch][entryDistributionValidationErrors]"= "<>"
? "filter[advancedSearch][contentLike]"= "<>"
? "filter[advancedSearch][contentMultiLikeOr]"= "<>"
? "filter[advancedSearch][contentMultiLikeAnd]"= "<>"
? "filter[advancedSearch][cuePointsFreeText]"= "<>"
? "filter[advancedSearch][cuePointTypeIn]"= "<>"
? "filter[advancedSearch][cuePointSubTypeEqual]"= "<>"
? "filter[advancedSearch][watermarkId]"= "<>"
? "filter[advancedSearch][indexIdGreaterThan]"= "<>"
? "filter[advancedSearch][depthGreaterThanEqual]"= "<>"
? "filter[advancedSearch][isQuiz]"= "<>"
? "filter[advancedSearch][field]"= "<>"
? "filter[advancedSearch][type]"= "<>"
? "filter[advancedSearch][items]"= "<>"
? "filter[advancedSearch][idEqual]"= "<>"
? "filter[advancedSearch][idIn]"= "<>"
? "filter[advancedSearch][userIdEqual]"= "<>"
? "filter[advancedSearch][userIdIn]"= "<>"
? "filter[advancedSearch][updatedAtGreaterThanOrEqual]"= "<>"
? "filter[advancedSearch][updatedAtLessThanOrEqual]"= "<>"
? "filter[advancedSearch][extendedStatusEqual]"= "<>"
? "filter[advancedSearch][extendedStatusIn]"= "<>"
? "filter[advancedSearch][comparison]"= "<>"
? "filter[advancedSearch][not]"= "<>"
? "filter[advancedSearch][attribute]"= "<>"
? "filter[advancedSearch][metadataProfileId]"= "<>"
? "filter[idEqual]"= "<>"
? "filter[idIn]"= "<>"
? "filter[idNotIn]"= "<>"
? "filter[nameLike]"= "<>"
? "filter[nameMultiLikeOr]"= "<>"
? "filter[nameMultiLikeAnd]"= "<>"
? "filter[nameEqual]"= "<>"
? "filter[partnerIdEqual]"= "<>"
? "filter[partnerIdIn]"= "<>"
? "filter[userIdEqual]"= "<>"
? "filter[userIdIn]"= "<>"
? "filter[userIdNotIn]"= "<>"
? "filter[creatorIdEqual]"= "<>"
? "filter[tagsLike]"= "<>"
? "filter[tagsMultiLikeOr]"= "<>"
? "filter[tagsMultiLikeAnd]"= "<>"
? "filter[adminTagsLike]"= "<>"
? "filter[adminTagsMultiLikeOr]"= "<>"
? "filter[adminTagsMultiLikeAnd]"= "<>"
? "filter[categoriesMatchAnd]"= "<>"
? "filter[categoriesMatchOr]"= "<>"
? "filter[categoriesNotContains]"= "<>"
? "filter[categoriesIdsMatchAnd]"= "<>"
? "filter[categoriesIdsMatchOr]"= "<>"
? "filter[categoriesIdsNotContains]"= "<>"
? "filter[categoriesIdsEmpty]"= "<>"
? "filter[statusEqual]"= "<>"
? "filter[statusNotEqual]"= "<>"
? "filter[statusIn]"= "<>"
? "filter[statusNotIn]"= "<>"
? "filter[moderationStatusEqual]"= "<>"
? "filter[moderationStatusNotEqual]"= "<>"
? "filter[moderationStatusIn]"= "<>"
? "filter[moderationStatusNotIn]"= "<>"
? "filter[typeEqual]"= "<>"
? "filter[typeIn]"= "<>"
? "filter[createdAtGreaterThanOrEqual]"= "<>"
? "filter[createdAtLessThanOrEqual]"= "<>"
? "filter[updatedAtGreaterThanOrEqual]"= "<>"
? "filter[updatedAtLessThanOrEqual]"= "<>"
? "filter[totalRankLessThanOrEqual]"= "<>"
? "filter[totalRankGreaterThanOrEqual]"= "<>"
? "filter[groupIdEqual]"= "<>"
? "filter[searchTextMatchAnd]"= "<>"
? "filter[searchTextMatchOr]"= "<>"
? "filter[accessControlIdEqual]"= "<>"
? "filter[accessControlIdIn]"= "<>"
? "filter[startDateGreaterThanOrEqual]"= "<>"
? "filter[startDateLessThanOrEqual]"= "<>"
? "filter[startDateGreaterThanOrEqualOrNull]"= "<>"
? "filter[startDateLessThanOrEqualOrNull]"= "<>"
? "filter[endDateGreaterThanOrEqual]"= "<>"
? "filter[endDateLessThanOrEqual]"= "<>"
? "filter[endDateGreaterThanOrEqualOrNull]"= "<>"
? "filter[endDateLessThanOrEqualOrNull]"= "<>"
? "filter[referenceIdEqual]"= "<>"
? "filter[referenceIdIn]"= "<>"
? "filter[replacingEntryIdEqual]"= "<>"
? "filter[replacingEntryIdIn]"= "<>"
? "filter[replacedEntryIdEqual]"= "<>"
? "filter[replacedEntryIdIn]"= "<>"
? "filter[replacementStatusEqual]"= "<>"
? "filter[replacementStatusIn]"= "<>"
? "filter[partnerSortValueGreaterThanOrEqual]"= "<>"
? "filter[partnerSortValueLessThanOrEqual]"= "<>"
? "filter[rootEntryIdEqual]"= "<>"
? "filter[rootEntryIdIn]"= "<>"
? "filter[parentEntryIdEqual]"= "<>"
? "filter[entitledUsersEditMatchAnd]"= "<>"
? "filter[entitledUsersEditMatchOr]"= "<>"
? "filter[entitledUsersPublishMatchAnd]"= "<>"
? "filter[entitledUsersPublishMatchOr]"= "<>"
? "filter[tagsNameMultiLikeOr]"= "<>"
? "filter[tagsAdminTagsMultiLikeOr]"= "<>"
? "filter[tagsAdminTagsNameMultiLikeOr]"= "<>"
? "filter[tagsNameMultiLikeAnd]"= "<>"
? "filter[tagsAdminTagsMultiLikeAnd]"= "<>"
? "filter[tagsAdminTagsNameMultiLikeAnd]"= "<>"
? "filter[freeText]"= "<>"
? "filter[isRoot]"= "<>"
? "filter[categoriesFullNameIn]"= "<>"
? "filter[categoryAncestorIdIn]"= "<>"
? "filter[redirectFromEntryId]"= "<>"
? "filter[objectType]"= "<>"
? "filter[lastPlayedAtGreaterThanOrEqual]"= "<>"
? "filter[lastPlayedAtLessThanOrEqual]"= "<>"
? "filter[durationLessThan]"= "<>"
? "filter[durationGreaterThan]"= "<>"
? "filter[durationLessThanOrEqual]"= "<>"
? "filter[durationGreaterThanOrEqual]"= "<>"
? "filter[durationTypeMatchOr]"= "<>"
? "filter[documentTypeEqual]"= "<>"
? "filter[documentTypeIn]"= "<>"
? "filter[assetParamsIdsMatchOr]"= "<>"
? "filter[assetParamsIdsMatchAnd]"= "<>"
? "filter[mediaTypeEqual]"= "<>"
? "filter[mediaTypeIn]"= "<>"
? "filter[sourceTypeEqual]"= "<>"
? "filter[sourceTypeNotEqual]"= "<>"
? "filter[sourceTypeIn]"= "<>"
? "filter[sourceTypeNotIn]"= "<>"
? "filter[mediaDateGreaterThanOrEqual]"= "<>"
? "filter[mediaDateLessThanOrEqual]"= "<>"
? "filter[flavorParamsIdsMatchOr]"= "<>"
? "filter[flavorParamsIdsMatchAnd]"= "<>"
? "filter[limit]"= "<>"
? "filter[externalSourceTypeEqual]"= "<>"
? "filter[externalSourceTypeIn]"= "<>"
? "filter[isLive]"= "<>"
? "filter[isRecordedEntryIdEmpty]"= "<>"
? "filter[hasMediaServerHostname]"= "<>"
? "pager[pageSize]"= "<>"
? "pager[pageIndex]"= "<>"


// List base entries by filter according to reference id

@name("Get Service Baseentry Action Listbyreferenceid")
GET "https://{{baseUrl}}/service/baseentry/action/listByReferenceId"
? "refId"= "<>"
? "pager[pageSize]"= "<>"
? "pager[pageIndex]"= "<>"


// List all pending flags for the entry.

@name("Get Service Baseentry Action Listflags")
GET "https://{{baseUrl}}/service/baseentry/action/listFlags"
? "entryId"= "<>"
? "pager[pageSize]"= "<>"
? "pager[pageIndex]"= "<>"


// Reject the entry and mark the pending flags (if any) as moderated (this will make the entry non-playable).

@name("Get Service Baseentry Action Reject")
GET "https://{{baseUrl}}/service/baseentry/action/reject"
? "entryId"= "<>"


// Update base entry. Only the properties that were set will be updated.

@name("Get Service Baseentry Action Update")
GET "https://{{baseUrl}}/service/baseentry/action/update"
? "entryId"= "<>"
? "baseEntry[name]"= "<>"
? "baseEntry[description]"= "<>"
? "baseEntry[userId]"= "<>"
? "baseEntry[creatorId]"= "<>"
? "baseEntry[tags]"= "<>"
? "baseEntry[adminTags]"= "<>"
? "baseEntry[categories]"= "<>"
? "baseEntry[categoriesIds]"= "<>"
? "baseEntry[type]"= "<>"
? "baseEntry[groupId]"= "<>"
? "baseEntry[partnerData]"= "<>"
? "baseEntry[licenseType]"= "<>"
? "baseEntry[accessControlId]"= "<>"
? "baseEntry[startDate]"= "<>"
? "baseEntry[endDate]"= "<>"
? "baseEntry[referenceId]"= "<>"
? "baseEntry[partnerSortValue]"= "<>"
? "baseEntry[conversionProfileId]"= "<>"
? "baseEntry[redirectEntryId]"= "<>"
? "baseEntry[parentEntryId]"= "<>"
? "baseEntry[operationAttributes]"= "<>"
? "baseEntry[entitledUsersEdit]"= "<>"
? "baseEntry[entitledUsersPublish]"= "<>"
? "baseEntry[templateEntryId]"= "<>"
? "baseEntry[displayInSearch]"= "<>"
? "baseEntry[objectType]"= "<>"
? "baseEntry[dataContent]"= "<>"
? "baseEntry[retrieveDataContentByGet]"= "<>"
? "baseEntry[documentType]"= "<>"
? "baseEntry[msDuration]"= "<>"
? "baseEntry[playlistContent]"= "<>"
? "baseEntry[filters]"= "<>"
? "baseEntry[totalResults]"= "<>"
? "baseEntry[playlistType]"= "<>"
? "baseEntry[mediaType]"= "<>"
? "baseEntry[conversionQuality]"= "<>"
? "baseEntry[sourceType]"= "<>"
? "baseEntry[searchProviderType]"= "<>"
? "baseEntry[searchProviderId]"= "<>"
? "baseEntry[creditUserName]"= "<>"
? "baseEntry[creditUrl]"= "<>"
? "baseEntry[streams]"= "<>"
? "baseEntry[editorType]"= "<>"
? "baseEntry[externalSourceType]"= "<>"
? "baseEntry[offlineMessage]"= "<>"
? "baseEntry[recordStatus]"= "<>"
? "baseEntry[dvrStatus]"= "<>"
? "baseEntry[dvrWindow]"= "<>"
? "baseEntry[lastElapsedRecordingTime]"= "<>"
? "baseEntry[liveStreamConfigurations]"= "<>"
? "baseEntry[recordedEntryId]"= "<>"
? "baseEntry[pushPublishEnabled]"= "<>"
? "baseEntry[publishConfigurations]"= "<>"
? "baseEntry[currentBroadcastStartTime]"= "<>"
? "baseEntry[recordingOptions][shouldCopyEntitlement]"= "<>"
? "baseEntry[recordingOptions][shouldCopyScheduling]"= "<>"
? "baseEntry[recordingOptions][shouldCopyThumbnail]"= "<>"
? "baseEntry[recordingOptions][shouldMakeHidden]"= "<>"
? "baseEntry[playlistId]"= "<>"
? "baseEntry[repeat]"= "<>"
? "baseEntry[bitrates]"= "<>"
? "baseEntry[primaryBroadcastingUrl]"= "<>"
? "baseEntry[secondaryBroadcastingUrl]"= "<>"
? "baseEntry[primaryRtspBroadcastingUrl]"= "<>"
? "baseEntry[secondaryRtspBroadcastingUrl]"= "<>"
? "baseEntry[streamName]"= "<>"
? "baseEntry[streamUrl]"= "<>"
? "baseEntry[hlsStreamUrl]"= "<>"
? "baseEntry[urlManager]"= "<>"
? "baseEntry[encodingIP1]"= "<>"
? "baseEntry[encodingIP2]"= "<>"
? "baseEntry[streamPassword]"= "<>"


// Update the content resource associated with the entry.

@name("Post Service Baseentry Action Updatecontent")
POST "https://{{baseUrl}}/service/baseentry/action/updateContent"
? "entryId"= "<>"
? "resource[objectType]"= "<>"
? "resource[resource][objectType]"= "<>"
? "resource[resource][url]"= "<>"
? "resource[resource][forceAsyncDownload]"= "<>"
? "resource[resource][assetId]"= "<>"
? "resource[resource][entryId]"= "<>"
? "resource[resource][flavorParamsId]"= "<>"
? "resource[resource][fileSyncObjectType]"= "<>"
? "resource[resource][objectSubType]"= "<>"
? "resource[resource][objectId]"= "<>"
? "resource[resource][version]"= "<>"
? "resource[resource][resource][objectType]"= "<>"
? "resource[resource][resource][url]"= "<>"
? "resource[resource][resource][forceAsyncDownload]"= "<>"
? "resource[resource][resource][assetId]"= "<>"
? "resource[resource][resource][entryId]"= "<>"
? "resource[resource][resource][flavorParamsId]"= "<>"
? "resource[resource][resource][fileSyncObjectType]"= "<>"
? "resource[resource][resource][objectSubType]"= "<>"
? "resource[resource][resource][objectId]"= "<>"
? "resource[resource][resource][version]"= "<>"
? "resource[resource][resource][resource][objectType]"= "<>"
? "resource[resource][resource][resource][url]"= "<>"
? "resource[resource][resource][resource][forceAsyncDownload]"= "<>"
? "resource[resource][resource][resource][assetId]"= "<>"
? "resource[resource][resource][resource][entryId]"= "<>"
? "resource[resource][resource][resource][flavorParamsId]"= "<>"
? "resource[resource][resource][resource][fileSyncObjectType]"= "<>"
? "resource[resource][resource][resource][objectSubType]"= "<>"
? "resource[resource][resource][resource][objectId]"= "<>"
? "resource[resource][resource][resource][version]"= "<>"
? "resource[resource][resource][resource][resources]"= "<>"
? "resource[resource][resource][resource][content]"= "<>"
? "resource[resource][resource][resource][storageProfileId]"= "<>"
? "resource[resource][resource][resource][privateKey]"= "<>"
? "resource[resource][resource][resource][publicKey]"= "<>"
? "resource[resource][resource][resource][keyPassphrase]"= "<>"
? "resource[resource][resource][resource][dropFolderFileId]"= "<>"
? "resource[resource][resource][resource][localFilePath]"= "<>"
? "resource[resource][resource][resource][keepOriginalFile]"= "<>"
? "resource[resource][resource][resource][token]"= "<>"
? "resource[resource][resource][resources]"= "<>"
? "resource[resource][resource][content]"= "<>"
? "resource[resource][resource][storageProfileId]"= "<>"
? "resource[resource][resource][privateKey]"= "<>"
? "resource[resource][resource][publicKey]"= "<>"
? "resource[resource][resource][keyPassphrase]"= "<>"
? "resource[resource][resource][dropFolderFileId]"= "<>"
? "resource[resource][resource][localFilePath]"= "<>"
? "resource[resource][resource][keepOriginalFile]"= "<>"
? "resource[resource][resource][token]"= "<>"
? "resource[resource][resources]"= "<>"
? "resource[resource][content]"= "<>"
? "resource[resource][storageProfileId]"= "<>"
? "resource[resource][privateKey]"= "<>"
? "resource[resource][publicKey]"= "<>"
? "resource[resource][keyPassphrase]"= "<>"
? "resource[resource][dropFolderFileId]"= "<>"
? "resource[resource][localFilePath]"= "<>"
? "resource[resource][keepOriginalFile]"= "<>"
? "resource[resource][token]"= "<>"
? "resource[resources]"= "<>"
? "resource[url]"= "<>"
? "resource[forceAsyncDownload]"= "<>"
? "resource[assetId]"= "<>"
? "resource[entryId]"= "<>"
? "resource[flavorParamsId]"= "<>"
? "resource[fileSyncObjectType]"= "<>"
? "resource[objectSubType]"= "<>"
? "resource[objectId]"= "<>"
? "resource[version]"= "<>"
? "resource[content]"= "<>"
? "resource[storageProfileId]"= "<>"
? "resource[privateKey]"= "<>"
? "resource[publicKey]"= "<>"
? "resource[keyPassphrase]"= "<>"
? "resource[dropFolderFileId]"= "<>"
? "resource[localFilePath]"= "<>"
? "resource[keepOriginalFile]"= "<>"
? "resource[token]"= "<>"
? "conversionProfileId"= "<>"
? "advancedOptions[keepManualThumbnails]"= "<>"
? "advancedOptions[pluginOptionItems]"= "<>"


// Update entry thumbnail from a different entry by a specified time offset (in seconds).

@name("Get Service Baseentry Action Updatethumbnailfromsourceentry")
GET "https://{{baseUrl}}/service/baseentry/action/updateThumbnailFromSourceEntry"
? "entryId"= "<>"
? "sourceEntryId"= "<>"
? "timeOffset"= "<>"


// Update entry thumbnail using url.

@name("Get Service Baseentry Action Updatethumbnailfromurl")
GET "https://{{baseUrl}}/service/baseentry/action/updateThumbnailFromUrl"
? "entryId"= "<>"
? "url"= "<>"


// Update entry thumbnail using a raw jpeg file.

@name("Post Service Baseentry Action Updatethumbnailjpeg")
POST "https://{{baseUrl}}/service/baseentry/action/updateThumbnailJpeg"
? "entryId"= "<>"


// Upload a file to Kaltura, that can be used to create an entry.

@name("Post Service Baseentry Action Upload")
POST "https://{{baseUrl}}/service/baseentry/action/upload"



