#!/usr/bin/env dothttp

# imported from 35240-7220de83-d124-4fe7-bf21-ae3a128a5b57.postman_collection.json

// # Create Or Update Certificate [konghq](https://docs.konghq.com/2.0.x/admin-api/#create-or-update-certificate)
// * A certificate object represents a public certificate, and can be optionally paired with the corresponding private key. These objects are used by Kong to handle SSL/TLS termination for encrypted requests, or for use as a trusted CA store when validating peer certificate of client/service. Certificates are optionally associated with SNI objects to tie a cert/key pair to one or more hostnames.
// * If intermediate certificates are required in addition to the main certificate, they should be concatenated together into one string according to the following order: main certificate on the top, followed by any intermediates.
// * Certificates can be both tagged and filtered by tags.
// 
// * Inserts (or replaces) the Certificate under the requested resource with the definition specified in the body. The Certificate will be identified via the name or id attribute.
// * When the name or id attribute has the structure of a UUID, the Certificate being inserted/replaced will be identified by its id. Otherwise it will be identified by its name.
// * When creating a new Certificate without specifying id (neither in the URL nor in the body), then it will be auto-generated.
// * Notice that specifying a name in the URL and a different one in the request body is not allowed.
// 
// # Path parameters
// <table style="width:50%">
//   <tr>
//     <th>Attributes</th>
//     <th>Mandatory</th>
//     <th>Type</th>
//     <th>Description</th> 
//   </tr>
//   <tr>
//     <td>certificate id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The unique identifier of the Certificate to create or update.</td>
//   </tr>
// </table>
// 
// # Request Body
// <table style="width:50%">
//   <tr>
//     <th>Attributes</th>
//     <th>Mandatory</th>
//     <th>Type</th>
//     <th>Description</th> 
//   </tr>
//   <tr>
//     <td>cert</td>
//     <td>required</td>
//     <td>body</td>
//     <td>PEM-encoded public certificate chain of the SSL key pair.</td>
//   </tr>
//   <tr>
//     <td>key</td>
//     <td>required</td>
//     <td>body</td>
//     <td>PEM-encoded private key of the SSL key pair.</td>
//   </tr>
//   <tr>
//     <td>tags</td>
//     <td>optional</td>
//     <td>body</td>
//     <td>An optional set of strings associated with the Certificate, for grouping and filtering.</td>
//   </tr>
//   <tr>
//     <td>snis</td>
//     <td>optional</td>
//     <td>body</td>
//     <td>An array of zero or more hostnames to associate with this certificate as SNIs. This is a sugar parameter that will, under the hood, create an SNI object and associate it with this certificate for your convenience. To set this attribute this certificate must have a valid private key associated with it.</td>
//   </tr>
// </table>

@name("Create Or Update Certificate")
PUT "https://{{gateway}}/certificates/:certificateId"
"Content-Type": "application/json"
json({
    "cert": "-----BEGIN CERTIFICATE-----...",
    "key": "-----BEGIN RSA PRIVATE KEY-----...",
    "tags": [
        "user-level",
        "low-priority"
    ]
})



