#!/usr/bin/env dothttp

# imported from 35240-7220de83-d124-4fe7-bf21-ae3a128a5b57.postman_collection.json

// # Delete Upstream [konghq](https://docs.konghq.com/2.0.x/admin-api/#delete-upstream-1)
// <table style="width:50%">
//   <tr>
//     <th>Attributes</th>
//     <th>Mandatory</th>
//     <th>Type</th>
//     <th>Description</th> 
//   </tr>
//   <tr>
//     <td>upstream name or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The unique identifier or the name of the upstream for which to delete the target.</td>
//   </tr>
//   <tr>
//     <td>host:port or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The host:port combination element of the target to remove, or the id of an existing target entry.</td>
//   </tr>
// </table>

@name("Delete Target")
DELETE "https://{{gateway}}/upstreams/:upstreamNameOrId/targets/:host:portOrId"


// # Set Target Address As Healthy [konghq](https://docs.konghq.com/2.0.x/admin-api/#set-target-address-as-healthy)
// * Set the current health status of an individual address resolved by a target in the load balancer to “healthy” in the entire Kong cluster.
// 
// * This endpoint can be used to manually re-enable an address resolved by a target that was previously disabled by the upstream’s health checker. Upstreams only forward requests to healthy nodes, so this call tells Kong to start using this address again.
// 
// * This resets the health counters of the health checkers running in all workers of the Kong node, and broadcasts a cluster-wide message so that the “healthy” status is propagated to the whole Kong cluster.
// 
// <table style="width:50%">
//   <tr>
//     <th>Attributes</th>
//     <th>Mandatory</th>
//     <th>Type</th>
//     <th>Description</th> 
//   </tr>
//   <tr>
//     <td>upstream name or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The unique identifier or the name of the upstream.</td>
//   </tr>
//   <tr>
//     <td>target or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The host/port combination element of the target to set as healthy, or the id of an existing target entry.</td>
//   </tr>
//   <tr>
//     <td>address</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The host/port combination element of the address to set as healthy.</td>
//   </tr>
// </table>

@name("Set Target Address As Healthy")
POST "https://{{gateway}}/upstreams/:upstreamNameOrId/targets/:targetOrID/:address/healthy"



// # Set Target Address As Unhealthy [konghq](https://docs.konghq.com/2.0.x/admin-api/#set-target-address-as-unhealthy)
// * Set the current health status of an individual address resolved by a target in the load balancer to “unhealthy” in the entire Kong cluster.
// 
// * This endpoint can be used to manually disable an address and have it stop responding to requests. Upstreams only forward requests to healthy nodes, so this call tells Kong to start skipping this address.
// 
// * This call resets the health counters of the health checkers running in all workers of the Kong node, and broadcasts a cluster-wide message so that the “unhealthy” status is propagated to the whole Kong cluster.
// 
// * Active health checks continue to execute for unhealthy addresses. Note that if active health checks are enabled and the probe detects that the address is actually healthy, it will automatically re-enable it again. To permanently remove a target from the balancer, you should delete a target instead.
// 
// <table style="width:50%">
//   <tr>
//     <th>Attributes</th>
//     <th>Mandatory</th>
//     <th>Type</th>
//     <th>Description</th> 
//   </tr>
//   <tr>
//     <td>upstream name or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The unique identifier or the name of the upstream.</td>
//   </tr>
//   <tr>
//     <td>target or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The host/port combination element of the target to set as unhealthy, or the id of an existing target entry.</td>
//   </tr>
//   <tr>
//     <td>address</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The host/port combination element of the address to set as unhealthy.</td>
//   </tr>
// </table>

@name("Set Target Address As Unhealthy")
POST "https://{{gateway}}/upstreams/:upstreamNameOrId/targets/:targetOrID/:address/unhealthy"



// # Set Target As Healthy [konghq](https://docs.konghq.com/2.0.x/admin-api/#set-target-as-healthy)
// * Set the current health status of a target in the load balancer to “healthy” in the entire Kong cluster. This sets the “healthy” status to all addresses resolved by this target.
// 
// * This endpoint can be used to manually re-enable a target that was previously disabled by the upstream’s health checker. Upstreams only forward requests to healthy nodes, so this call tells Kong to start using this target again.
// 
// * This resets the health counters of the health checkers running in all workers of the Kong node, and broadcasts a cluster-wide message so that the “healthy” status is propagated to the whole Kong cluster.
// 
// <table style="width:50%">
//   <tr>
//     <th>Attributes</th>
//     <th>Mandatory</th>
//     <th>Type</th>
//     <th>Description</th> 
//   </tr>
//   <tr>
//     <td>upstream name or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The unique identifier or the name of the upstream.</td>
//   </tr>
//   <tr>
//     <td>target or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The host/port combination element of the target to set as healthy, or the id of an existing target entry.</td>
//   </tr>
// </table>

@name("Set Target As Healthy")
POST "https://{{gateway}}/upstreams/:upstreamNameOrId/targets/:targetOrID/healthy"



// # Set Target As Unhealthy [konghq](https://docs.konghq.com/2.0.x/admin-api/#set-target-as-unhealthy)
// * Set the current health status of a target in the load balancer to “unhealthy” in the entire Kong cluster. This sets the “unhealthy” status to all addresses resolved by this target.
// 
// * This endpoint can be used to manually disable a target and have it stop responding to requests. Upstreams only forward requests to healthy nodes, so this call tells Kong to start skipping this target.
// 
// * This call resets the health counters of the health checkers running in all workers of the Kong node, and broadcasts a cluster-wide message so that the “unhealthy” status is propagated to the whole Kong cluster.
// 
// * Active health checks continue to execute for unhealthy targets. Note that if active health checks are enabled and the probe detects that the target is actually healthy, it will automatically re-enable it again. To permanently remove a target from the balancer, you should delete a target instead.
// 
// <table style="width:50%">
//   <tr>
//     <th>Attributes</th>
//     <th>Mandatory</th>
//     <th>Type</th>
//     <th>Description</th> 
//   </tr>
//   <tr>
//     <td>upstream name or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The unique identifier or the name of the upstream.</td>
//   </tr>
//   <tr>
//     <td>target or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The host/port combination element of the target to set as unhealthy, or the id of an existing target entry.</td>
//   </tr>
// </table>

@name("Set Target As Unhealthy")
POST "https://{{gateway}}/upstreams/:upstreamNameOrId/targets/:targetOrID/unhealthy"



// # List All Targets [konghq](https://docs.konghq.com/2.0.x/admin-api/#list-all-targets)
// * Lists all targets of the upstream. Multiple target objects for the same target may be returned, showing the history of changes for a specific target. The target object with the latest created_at is the current definition.
// 
// <table style="width:50%">
//   <tr>
//     <th>Attributes</th>
//     <th>Mandatory</th>
//     <th>Type</th>
//     <th>Description</th> 
//   </tr>
//   <tr>
//     <td>name or id</td>
//     <td>required</td>
//     <td>path</td>
//     <td>The unique identifier or the name of the upstream for which to list the targets.</td>
//   </tr>
// </table>

@name("List All Targets")
GET "https://{{gateway}}/upstreams/:nameOrId/targets/all/"



