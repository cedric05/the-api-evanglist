#!/usr/bin/env dothttp

# imported from 35240-4cff9dbd-dc9e-457a-8421-41b9b4a7bdef.postman_collection.json

// Create a new user on the system.n##### PermissionsnNo permission required but user creation can be controlled by server configuration.n

@name("Create a user")
POST "https://{{baseUrl}}/users"


// Get a list of users based on a provided list of user ids.n##### PermissionsnRequires an active session but no other permissions.n

@name("Get users by ids")
POST "https://{{baseUrl}}/users/ids"


// Get a list of users based on a provided list of usernames.n##### PermissionsnRequires an active session but no other permissions.n

@name("Get users by usernames")
POST "https://{{baseUrl}}/users/usernames"


// Get a list of users based on search criteria provided in the request body. Searches are typically done against username, full name, nickname and email unless otherwise configured by the server.n##### PermissionsnRequires an active session and `read_channel` and/or `view_team` permissions for any channels or teams specified in the request body.n

@name("Search users")
POST "https://{{baseUrl}}/users/search"


// Get a list of users for the purpose of autocompleting based on the provided search term. Specify a combination of `team_id` and `channel_id` to filter results further.n##### PermissionsnRequires an active session and `view_team` and `read_channel` on any teams or channels used to filter the results further.n

@name("Autocomplete users")
GET "https://{{baseUrl}}/users/autocomplete"
? "team_id"= "<post>"
? "channel_id"= "<post>"
? "name"= "<post>"


// Get a user object by providing a username. Sensitive information will be sanitized out.n##### PermissionsnRequires an active session but no other permissions.n

@name("Get a user by username")
GET "https://{{baseUrl}}/users/username/:username"


// Check if a user has multi-factor authentication active on their account by providing a login id. Used to check whether an MFA code needs to be provided when logging in.n##### PermissionsnNo permission required.n

@name("Check MFA")
POST "https://{{baseUrl}}/users/mfa"


// Attach a mobile device id to the currently logged in session. This will enable push notiofications for a user, if configured by the server.n##### PermissionsnMust be authenticated.n

@name("Attach mobile device")
PUT "https://{{baseUrl}}/users/sessions/device"


// Switch a user's login method from using email to OAuth2/SAML/LDAP or back to email. When switching to OAuth2/SAML, account switching is not complete until the user follows the returned link and completes any steps on the OAuth2/SAML service provider.nnTo switch from email to OAuth2/SAML, specify `current_service`, `new_service`, `email` and `password`.nnTo switch from OAuth2/SAML to email, specify `current_service`, `new_service`, `email` and `new_password`.nnTo switch from email to LDAP/AD, spe

@name("Switch login method")
POST "https://{{baseUrl}}/users/login/switch"


// Get a list of user statuses by id from the server.n##### PermissionsnMust be authenticated.n

@name("Get user statuses by id")
POST "https://{{baseUrl}}/users/status/ids"



