#!/usr/bin/env dothttp

# imported from 35240-af6221c8-ec0e-4985-a5d7-c06cfc0b8fae.postman_collection.json

@name("Add usage credits to an API Key.")
GET "https://{{baseUrl}}/api2/json/addCredits/:apiKey/:usageCredits/:userMessage"


@name("Activate/deactivate anonymization for a source.")
GET "https://{{baseUrl}}/api2/json/anonymize/:source/:anonymized"


@name("List of API services and usage cost in Units (default is 1=ONE Unit).")
GET "https://{{baseUrl}}/api2/json/apiServices"


@name("Print current API usage.")
GET "https://{{baseUrl}}/api2/json/apiUsage"


@name("Print historical API usage.")
GET "https://{{baseUrl}}/api2/json/apiUsageHistory"


@name("Print historical API usage (in an aggregated view, by service, by day/hour/min).")
GET "https://{{baseUrl}}/api2/json/apiUsageHistoryAggregate"


@name("List possible currency options for billing (USD, EUR, GBP, ...)")
GET "https://{{baseUrl}}/api2/json/billingCurrencies"


@name("Read the history billing information (invoices paid via Stripe or manually).")
GET "https://{{baseUrl}}/api2/json/billingHistory/:token"


@name("Read the billing information (company name, address, phone, vat ID)")
GET "https://{{baseUrl}}/api2/json/billingInfo/:token"


@name("Create a Stripe Customer, based on a payment card token (from secure StripeJS) and email.")
POST "https://{{baseUrl}}/api2/json/charge"


@name("Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming")
GET "https://{{baseUrl}}/api2/json/chineseNameCandidates/:chineseSurnameLatin/:chineseGivenNameLatin"


@name("Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming")
POST "https://{{baseUrl}}/api2/json/chineseNameCandidatesBatch"


@name("Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming.")
POST "https://{{baseUrl}}/api2/json/chineseNameCandidatesGenderBatch"


@name("Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female')")
GET "https://{{baseUrl}}/api2/json/chineseNameGenderCandidates/:chineseSurnameLatin/:chineseGivenNameLatin/:knownGender"


@name("Return a score for matching Chinese name ex. u738bu6653u660e with a romanized name ex. Wang Xiaoming")
GET "https://{{baseUrl}}/api2/json/chineseNameMatch/:chineseSurnameLatin/:chineseGivenNameLatin/:chineseName"


@name("Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming")
POST "https://{{baseUrl}}/api2/json/chineseNameMatchBatch"


@name("Setting an API Key to a corporate status.")
GET "https://{{baseUrl}}/api2/json/corporateKey/:apiKey/:corporate"


@name("[USES 10 UNITS] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin.")
GET "https://{{baseUrl}}/api2/json/country/:personalNameFull"


@name("[USES 10 UNITS] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin.")
POST "https://{{baseUrl}}/api2/json/countryBatch"


@name("Update debug level for a classifier")
GET "https://{{baseUrl}}/api2/json/debugLevel/:logger/:level"


@name("[USES 20 UNITS] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)")
GET "https://{{baseUrl}}/api2/json/diaspora/:countryIso2/:firstName/:lastName"


@name("[USES 20 UNITS] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)")
POST "https://{{baseUrl}}/api2/json/diasporaBatch"


@name("Flush counters.")
GET "https://{{baseUrl}}/api2/json/flush"


@name("Infer the likely gender of a name.")
GET "https://{{baseUrl}}/api2/json/gender/:firstName/:lastName"


@name("Infer the likely gender of up to 100 names, detecting automatically the cultural context.")
POST "https://{{baseUrl}}/api2/json/genderBatch"


@name("Infer the likely gender of a Chinese full name ex. u738bu6653u660e")
GET "https://{{baseUrl}}/api2/json/genderChineseName/:chineseName"


@name("Infer the likely gender of up to 100 full names ex. u738bu6653u660e")
POST "https://{{baseUrl}}/api2/json/genderChineseNameBatch"


@name("Infer the likely gender of a Chinese name in LATIN (Pinyin).")
GET "https://{{baseUrl}}/api2/json/genderChineseNamePinyin/:chineseSurnameLatin/:chineseGivenNameLatin"


@name("Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin).")
POST "https://{{baseUrl}}/api2/json/genderChineseNamePinyinBatch"


@name("Infer the likely gender of a full name, ex. John H. Smith")
GET "https://{{baseUrl}}/api2/json/genderFull/:fullName"


@name("Infer the likely gender of up to 100 full names, detecting automatically the cultural context.")
POST "https://{{baseUrl}}/api2/json/genderFullBatch"


@name("Infer the likely gender of a full name, given a local context (ISO2 country code).")
GET "https://{{baseUrl}}/api2/json/genderFullGeo/:fullName/:countryIso2"


@name("Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code).")
POST "https://{{baseUrl}}/api2/json/genderFullGeoBatch"


@name("Infer the likely gender of a name, given a local context (ISO2 country code).")
GET "https://{{baseUrl}}/api2/json/genderGeo/:firstName/:lastName/:countryIso2"


@name("Infer the likely gender of up to 100 names, each given a local context (ISO2 country code).")
POST "https://{{baseUrl}}/api2/json/genderGeoBatch"


@name("Invalidate system caches.")
GET "https://{{baseUrl}}/api2/json/invalidateCache"


@name("Activate/deactivate learning from a source.")
GET "https://{{baseUrl}}/api2/json/learnable/:source/:learnable"


@name("Get the overall API counter")
GET "https://{{baseUrl}}/api2/json/namsorCounter"


@name("[USES 10 UNITS] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead.")
GET "https://{{baseUrl}}/api2/json/origin/:firstName/:lastName"


@name("[USES 10 UNITS] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context.")
POST "https://{{baseUrl}}/api2/json/originBatch"


@name("Infer the likely first/last name structure of a name, ex. u738bu6653u660e -> u738b(surname) u6653u660e(given name)")
GET "https://{{baseUrl}}/api2/json/parseChineseName/:chineseName"


@name("Infer the likely first/last name structure of a name, ex. u738bu6653u660e -> u738b(surname) u6653u660e(given name).")
POST "https://{{baseUrl}}/api2/json/parseChineseNameBatch"


@name("Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.")
POST "https://{{baseUrl}}/api2/json/parseNameBatch"


@name("Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision. ")
POST "https://{{baseUrl}}/api2/json/parseNameGeoBatch"


@name("Infer the likely gender of up to 100 fully parsed names, detecting automatically the cultural context.")
POST "https://{{baseUrl}}/api2/json/parsedGenderBatch"


@name("Infer the likely gender of up to 100 fully parsed names, detecting automatically the cultural context.")
POST "https://{{baseUrl}}/api2/json/parsedGenderGeoBatch"


@name("Get the Stripe payment information associated with the current google auth session token.")
GET "https://{{baseUrl}}/api2/json/paymentInfo/:token"


@name("[USES 11 UNITS] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number.")
GET "https://{{baseUrl}}/api2/json/phoneCode/:firstName/:lastName/:phoneNumber"


@name("[USES 11 UNITS] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number.")
POST "https://{{baseUrl}}/api2/json/phoneCodeBatch"


@name("[USES 11 UNITS] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence).")
GET "https://{{baseUrl}}/api2/json/phoneCodeGeo/:firstName/:lastName/:phoneNumber/:countryIso2"


@name("[USES 11 UNITS] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence).")
POST "https://{{baseUrl}}/api2/json/phoneCodeGeoBatch"


@name("[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence).")
GET "https://{{baseUrl}}/api2/json/phoneCodeGeoFeedbackLoop/:firstName/:lastName/:phoneNumber/:phoneNumberE164/:countryIso2"


@name("Romanize the Chinese name to Pinyin, ex. u738bu6653u660e -> Wang (surname) Xiaoming (given name)")
GET "https://{{baseUrl}}/api2/json/pinyinChineseName/:chineseName"


@name("Romanize a list of Chinese name to Pinyin, ex. u738bu6653u660e -> Wang (surname) Xiaoming (given name).")
POST "https://{{baseUrl}}/api2/json/pinyinChineseNameBatch"


@name("Procure an API Key (sent via Email), based on an auth token. Keep your API Key secret.")
GET "https://{{baseUrl}}/api2/json/procureKey/:token"


@name("Remove the user account.")
GET "https://{{baseUrl}}/api2/json/removeUserAccount/:token"


@name("Remove (on behalf) a user account.")
GET "https://{{baseUrl}}/api2/json/removeUserAccountOnBehalf/:apiKey"


@name("Stop learning and shutdown system.")
GET "https://{{baseUrl}}/api2/json/shutdown"


@name("Get the current software version")
GET "https://{{baseUrl}}/api2/json/softwareVersion"


@name("Print basic source statistics.")
GET "https://{{baseUrl}}/api2/json/sourceStats/:source"


@name("Print basic system statistics.")
GET "https://{{baseUrl}}/api2/json/stats"


@name("Connects a Stripe Account.")
GET "https://{{baseUrl}}/api2/json/stripeConnect"
? "scope"= "<string>"
? "code"= "<string>"
? "error"= "<string>"
? "error_description"= "<string>"


@name("Subscribe to a give API plan, using the user's preferred or default currency.")
GET "https://{{baseUrl}}/api2/json/subscribePlan/:planName/:token"


@name("Subscribe to a give API plan, using the user's preferred or default currency (admin only).")
GET "https://{{baseUrl}}/api2/json/subscribePlanOnBehalf/:planName/:apiKey"


@name("Sets or update the billing information (company name, address, phone, vat ID)")
POST "https://{{baseUrl}}/api2/json/updateBillingInfo/:token"


@name("Modifies the hard/soft limit on the API plan's overages (default is 0$ soft limit).")
GET "https://{{baseUrl}}/api2/json/updateLimit/:usageLimit/:hardOrSoft/:token"


@name("Update the default Stripe card associated with the current google auth session token.")
GET "https://{{baseUrl}}/api2/json/updatePaymentDefault/:defautSourceId/:token"


@name("[USES 10 UNITS] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino).")
GET "https://{{baseUrl}}/api2/json/usRaceEthnicity/:firstName/:lastName"


@name("[USES 10 UNITS] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy.")
POST "https://{{baseUrl}}/api2/json/usRaceEthnicityBatch"


@name("[USES 10 UNITS] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino).")
GET "https://{{baseUrl}}/api2/json/usRaceEthnicityZIP5/:firstName/:lastName/:zip5Code"


@name("[USES 10 UNITS] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code.")
POST "https://{{baseUrl}}/api2/json/usZipRaceEthnicityBatch"


@name("Get the user profile associated with the current google auth session token.")
GET "https://{{baseUrl}}/api2/json/userInfo/:token"


@name("Verifies an email, based on token sent to that email")
GET "https://{{baseUrl}}/api2/json/verifyEmail/:emailToken"


@name("Verifies an email, based on token sent to that email")
GET "https://{{baseUrl}}/api2/json/verifyRemoveEmail/:emailToken"


@name("Vetting of a source.")
GET "https://{{baseUrl}}/api2/json/vetting/:source/:vetted"



