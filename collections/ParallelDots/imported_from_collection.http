#!/usr/bin/env dothttp

# imported from 35240-e98c1e78-d039-4630-b4ac-7c1d0cb76717.postman_collection.json

// # Introduction
// What does your API do?
// 
// Sentiment API accepts input text, language code and API key to return a JSON response classifying the input text into a sentiment.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.Languages supported are German (de), French (fr), Dutch (nl), Italian (it), Spanish (es), Chinese (zh), Portuguese (pt), Japanese (ja), Indonesian (id), Thai (th), Danish (da), Finish (fi)
// 
// Response will be in JSON sorted 

@name("Sentiment")
POST "https://{{baseUrl}}/sentiment"


// # Introduction
// What does your API do?
// 
// Sometimes the three classes of sentiment (positive, negative and neutral) are not sufficient to understand the nuances regarding the underlying tone of a sentence. Our Emotion Analysis classifier is trained on our proprietary dataset and tells whether the underlying emotion behind a message is: Happy, Sad, Angry, Fearful, Excited, Funny or Indifferent.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-dat

@name("Emotion")
POST "https://{{baseUrl}}/emotion"


// # Introduction
// What does your API do?
// 
// Semantic Analysis API helps users cluster similar articles by understanding the relatedness between different content and streamlines research by eliminating redundant text contents.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//   "usage": "By accessing ParallelDots API or using information generated by ParallelDots API, you are agreeing to be bou

@name("Semantic Similarity")
POST "https://{{baseUrl}}/similarity"


// # Introduction
// What does your API do?
// 
// Named-entity recognition(NER) can identify individuals, companies, places, organization, cities and other various type of entities. API can extract this information from any type of text, web page or social media network.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//     "usage": "By accessing ParallelDots API or using information generated by Par

@name("Name Entity Recognition")
POST "https://{{baseUrl}}/ner"


// # Introduction
// What does your API do?
// 
// Keyword Generator are powerful tools in text analysis that can be used to index data, generate tag clouds and accelerate the searching time. It generates an extensive list of relevant keywords and phrases to make research more context focussed.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//     "keywords": [
//         {
//             "keyword": "Cristi

@name("Keywords")
POST "https://{{baseUrl}}/keywords"


// # Introduction
// What does your API do?
// 
// Text Classification can be useful in understanding customer behaviour by categorizing conversations on social networks, feedback and other web sources.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//     "usage": "By accessing ParallelDots API or using information generated by ParallelDots API, you are agreeing to be bound by the ParallelDots API Te

@name("Taxonomy")
POST "https://{{baseUrl}}/taxonomy"


// # Introduction
// What does your API do?
// 
// This classifier tells whether the underlying intention behind a sentence is opinion, news, marketing, complaint, suggestion, apprectiation, query. This is trained on our proprietary dataset.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//     "probabilities": {
//         "marketing": 0.038,
//         "news": 0.916,
//         "query": 0.008,
//         "feedb

@name("Intent")
POST "https://{{baseUrl}}/intent"


// # Introduction
// What does your API do?
// 
// Abusive content specifier specifies whether the content is abusive or not.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//   "usage": "By accessing ParallelDots API or using information generated by ParallelDots API, you are agreeing to be bound by the ParallelDots API Terms of Use: http://www.paralleldots.com/terms-and-conditions",
//   "sentence_type

@name("Abuse")
POST "https://{{baseUrl}}/abuse"


// # Introduction
// What does your API do?
// 
// Understand the text entered by using our API.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//     "usage": "By accessing ParallelDots API or using information generated by ParallelDots API, you are agreeing to be bound by the ParallelDots API Terms of Use: http://www.paralleldots.com/terms-and-conditions",
//     "output": [
//         {
//             "text

@name("Text Parser")
POST "https://{{baseUrl}}/text_parser"


// # Introduction
// What does your API do?
// 
// Custom Classifier API accepts input text, categories with a list of sub-categories and API key to return a JSON response classifying the input text into categories provided.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data. Providing sub-categories is optional, send an empty array ('[]') in case you do want to add any sub-categories to your category.
// 
// Response will be in JSON sorted by confidence sc

@name("Custom Classifier")
POST "https://{{baseUrl}}/custom_classifier"


// # Introduction
// What does your API do?
// 
// Get the virality score of your picture on socail media.  
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//     "Popular": "59.8144471645",
//     "usage": "By accessing ParallelDots API or using information generated by ParallelDots API, you are agreeing to be bound by the ParallelDots API Terms of Use: http://www.paralleldots.com/terms-and-conditions",

@name("Virality Detection")
POST "https://{{baseUrl}}/popularity"


// # Introduction
// What does your API do?
// 
// Nudity detection classifier is a powerful tool to filter out pornographic and non-pornographic images from social media feeds, forums, messaging apps, etc.. ParallelDots nudity detection classifier can filter such content and help build a safer platform for your community.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//     "usage": "By accessing Pa

@name("NSFW")
POST "https://{{baseUrl}}/nsfw"


// # Introduction
// What does your API do?
// 
// Get phrase keywords from the text in the input.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.
// 
// Response will be in JSON as shown below:
// 
// ```
// {
//     "keywords": [
//         {
//             "relevance_score": 1,
//             "keyword": "Ronaldo"
//         },
//         {
//             "relevance_score": 2,
//             "keyword": "Principality Stadium"
//         },
//         {
//             "relevance_score": 1,
//     

@name("Phrase Extractor")
POST "https://{{baseUrl}}/phrase_extractor"


// # Introduction
// What does your API do?
// 
// Extract Keywords from different languages using this API.
// 
// # Overview
// Things that the developers should know about
// 
// The API accepts the input parameters as form-data.The API works best when input long and multiple sentences.Languages supported are German(de), French(fr), Dutch(nl), Italian(it), Spanish(es), Portuguese(pt), Danish(da), Finish(fi)
// Response will be in JSON as shown below:
// 
// ```
// {
//     "keywords": [
//         {
//             "relevance_score": 4,
//    

@name("Multilang_Keywords")
POST "https://{{baseUrl}}/multilang_keywords"



