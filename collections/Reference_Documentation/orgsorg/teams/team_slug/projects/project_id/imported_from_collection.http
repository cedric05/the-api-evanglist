#!/usr/bin/env dothttp

# imported from 35240-ac6561cd-0334-4ee5-8280-57b4086d4c3d.postman_collection.json

// Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.
// 
// **Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects/{project_id}`.

@name("Check team permissions for a project")
GET "https://{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id"


// Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.
// 
// **Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/projects/{project_id}`.

@name("Add or update team project permissions")
PUT "https://{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id"
"Content-Type": "application/json"
json({
    "permission": "<string>"
})


// Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. This endpoint removes the project from the team, but does not delete the project.
// 
// **Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/projects/{project_id}`.

@name("Remove a project from a team")
DELETE "https://{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id"



