#!/usr/bin/env dothttp

# imported from 35240-ac6561cd-0334-4ee5-8280-57b4086d4c3d.postman_collection.json

// **Note:** Multi-line comments on pull requests are currently in public beta and subject to change.
// 
// Lists all review comments for a pull request. By default, review comments are in ascending order by ID.
// 
// **Multi-line comment summary**
// 
// **Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.
// 
// Use the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.
// 
// If you use the `comfort-fade` preview header, your response will show:
// 
// *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.
// *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.
// 
// If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:
// 
// *   For multi-line comments, the last line of the comment range for the `position` attribute.
// *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/v3/pulls/comments/#parameters-2) table.
// 
// The `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions.

@name("List review comments on a pull request")
GET "https://{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments"
? "sort"= "created"
? "direction"= "<string>"
? "since"= "<string>"
? "per_page"= "30"
? "page"= "1"


// **Note:** Multi-line comments on pull requests are currently in public beta and subject to change.
// 
// Creates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see "[Create an issue comment](https://developer.github.com/v3/issues/comments/#create-an-issue-comment)." We recommend creating a review comment using `line`, `side`, and optionally `start_line` and `start_side` if your comment applies to more than one line in the pull request diff.
// 
// You can still create a review comment using the `position` parameter. When you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required. For more information, see [Multi-line comment summary](https://developer.github.com/v3/pulls/comments/#multi-line-comment-summary-3).
// 
// **Note:** The position value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.
// 
// This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.
// 
// **Multi-line comment summary**
// 
// **Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.
// 
// Use the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.
// 
// If you use the `comfort-fade` preview header, your response will show:
// 
// *   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.
// *   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.
// 
// If you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:
// 
// *   For multi-line comments, the last line of the comment range for the `position` attribute.
// *   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/v3/pulls/comments/#parameters-2) table.

@name("Create a review comment for a pull request")
POST "https://{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments"
"Content-Type": "application/json"
json({
    "body": "<string>",
    "path": "<string>",
    "commit_id": "<string>",
    "position": "<integer>",
    "side": "<string>",
    "line": "<integer>",
    "start_line": "<integer>",
    "start_side": "<string>",
    "in_reply_to": "<integer>"
})


// Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.
// 
// This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See "[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)" and "[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)" for details.

@name("Create a reply for a review comment")
POST "https://{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments/:comment_id/replies"
"Content-Type": "application/json"
json({
    "body": "<string>"
})



