#!/usr/bin/env dothttp

# imported from 35240-85036b5c-969b-49fd-9dfd-6423d5dbc971.postman_collection.json

// base-inherit-auth

@name("base-inherit-auth")
GET "https://"


// Returns information about the status of an Item.

@name("Retrieve an Item") : "base-inherit-auth"
POST "https://{{baseUrl}}/item/get"
"Content-Type": "application/json"
json({
    "access_token": "sunt",
    "client_id": "in dolor",
    "secret": "dolore ut do fugiat"
})


// The `/item/remove`  endpoint allows you to remove an Item. Once removed, the `access_token`  associated with the Item is no longer valid and cannot be used to access any data that was associated with the Item.
// 
// Note that in the Development environment, issuing an `/item/remove`  request will not decrement your live credential count.

@name("Remove an Item") : "base-inherit-auth"
POST "https://{{baseUrl}}/item/remove"
"Content-Type": "application/json"
json({
    "access_token": "qui",
    "client_id": "incididunt dolore velit",
    "secret": "qui"
})


// The POST `/item/webhook/update` allows you to update the webhook URL associated with an Item. This request triggers a [`WEBHOOK_UPDATE_ACKNOWLEDGED`](/docs/api/webhooks/#item-webhook-url-updated) webhook to the newly specified webhook URL.

@name("Update Webhook URL") : "base-inherit-auth"
POST "https://{{baseUrl}}/item/webhook/update"
"Content-Type": "application/json"
json({
    "access_token": "pariatur adipisicing",
    "webhook": "nostrud ut non",
    "client_id": "dolor occaecat consequat nostru",
    "secret": "id commodo"
})


// By default, the `access_token` associated with an Item does not expire and should be stored in a persistent, secure manner.
// 
// You can use the `/item/access_token/invalidate` endpoint to rotate the `access_token` associated with an Item. The endpoint returns a new `access_token` and immediately invalidates the previous `access_token`.

@name("Invalidate access_token") : "base-inherit-auth"
POST "https://{{baseUrl}}/item/access_token/invalidate"
"Content-Type": "application/json"
json({
    "access_token": "in Lorem venia",
    "client_id": "dolor cillum amet fugiat consectet",
    "secret": "culpa deserunt Ut adipisicing"
})


// `/item/import` creates an Item via your Plaid Exchange Integration and returns an `access_token`. As part of an `/item/import` request, you will include a User ID (`user_auth.user_id`) and Authentication Token (`user_auth.auth_token`) that enable data aggregation through your Plaid Exchange API endpoints. These authentication principals are to be chosen by you.
// 
// Upon creating an Item via `/item/import`, Plaid will automatically begin an extraction of that Item through the Plaid Exchange infrastructure you have already integrated. This will automatically generate the Plaid native account ID for the account the user will switch their direct deposit to (`target_account_id`).

@name("Import Item") : "base-inherit-auth"
POST "https://{{baseUrl}}/item/import"
"Content-Type": "application/json"
json({
    "products": [
        "velit sed"
    ],
    "user_auth": {
        "user_id": "tempor culpa sint voluptate reprehenderit",
        "auth_token": "dolor ex sed ad"
    },
    "client_id": "et nisi ut elit in",
    "secret": "ut nostrud commodo",
    "options": {
        "webhook": "exercitation adipisicing qui"
    }
})



