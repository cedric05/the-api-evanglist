#!/usr/bin/env dothttp

# imported from 35240-85036b5c-969b-49fd-9dfd-6423d5dbc971.postman_collection.json

// base-inherit-auth

@name("base-inherit-auth")
GET "https://"


// The `/transactions/get` endpoint allows developers to receive user-authorized transaction data for credit, depository, and some loan-type accounts (the list of loan-type accounts supported is the same as for Liabilities; for details, see the `/liabilities/get` endpoint). For transaction history from investments accounts, use the [Investments endpoint](/docs/api/products#investments) instead. Transaction data is standardized across financial institutions, and in many cases transactions are linked to a clean name, entity type, location, and category. Similarly, account data is standardized and returned with a clean name, number, balance, and other meta information where available.
// 
// Transactions are returned in reverse-chronological order, and the sequence of transaction ordering is stable and will not shift.  Transactions are not immutable and can also be removed altogether by the institution; a removed transaction will no longer appear in `/transactions/get`.  For more details, see [Pending and posted transactions](/docs/transactions/transactions-data/#pending-and-posted-transactions).
// 
// Due to the potentially large number of transactions associated with an Item, results are paginated. Manipulate the `count` and `offset` parameters in conjunction with the `total_transactions` response body field to fetch all available transactions.
// 
// Note that data may not be immediately available to `/transactions/get`. Plaid will begin to prepare transactions data upon Item link, if Link was initialized with `transactions`, or upon the first call to `/transactions/get`, if it wasn't. To be alerted when transaction data is ready to be fetched, listen for the [`INITIAL_UPDATE`](/docs/api/webhooks#transactions-initial_update) and [`HISTORICAL_UPDATE`](/docs/api/webhooks#transactions-historical_update) webhooks. If no transaction history is ready when `/transactions/get` is called, it will return a `PRODUCT_NOT_READY` error.

@name("Get transaction data") : "base-inherit-auth"
POST "https://{{baseUrl}}/transactions/get"
"Content-Type": "application/json"
json({
    "access_token": "labore magna incididunt commodo tempor",
    "start_date": "1958-12-15",
    "end_date": "1941-11-28",
    "client_id": "elit aliqua in laboris",
    "options": {
        "account_ids": [
            "pariatur dolore",
            "est anim"
        ],
        "count": 100,
        "offset": 0
    },
    "secret": "minim ut"
})


// `/transactions/refresh` is an optional endpoint for users of the Transactions product. It initiates an on-demand extraction to fetch the newest transactions for an Item. This on-demand extraction takes place in addition to the periodic extractions that automatically occur multiple times a day for any Transactions-enabled Item. If changes to transactions are discovered after calling `/transactions/refresh`, Plaid will fire a webhook: [`TRANSACTIONS_REMOVED`](/docs/api/webhooks#deleted-transactions-detected) will be fired if any removed transactions are detected, and [`DEFAULT_UPDATE`](/docs/api/webhooks#transactions-default_update) will be fired if any new transactions are detected. New transactions can be fetched by calling `/transactions/get`.
// 
// Access to `/transactions/refresh` in Production is specific to certain pricing plans. If you cannot access `/transactions/refresh` in Production, [contact Sales](https://www.plaid.com/contact) for assistance.

@name("Refresh transaction data") : "base-inherit-auth"
POST "https://{{baseUrl}}/transactions/refresh"
"Content-Type": "application/json"
json({
    "client_id": "veniam in do",
    "access_token": "officia in culpa",
    "secret": "ut id officia si"
})



